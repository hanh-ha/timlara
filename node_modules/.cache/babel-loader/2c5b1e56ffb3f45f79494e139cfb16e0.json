{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { AllSagaActions } from './sagas';\nimport { ApplicationState } from './reducers';\nconst initialAppState = {};\nexport const getStore = (initialState = initialAppState) => {\n  const composeEnhancers = composeWithDevTools({});\n  const sagaMiddleware = createSagaMiddleware();\n  const appStore = createStore(ApplicationState, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\n  sagaMiddleware.run(AllSagaActions);\n  return appStore;\n};\nexport * from './endpoints';\nexport * from './actions';\nexport * from './reducers';\nexport * from './sagas';\nexport * from './types';\nexport * from './requests';","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/store/index.ts"],"names":["createStore","applyMiddleware","createSagaMiddleware","composeWithDevTools","AllSagaActions","ApplicationState","initialAppState","getStore","initialState","composeEnhancers","sagaMiddleware","appStore","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA,MAAMC,eAAoB,GAAG,EAA7B;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,YAAY,GAAGF,eAAhB,KAAoC;AAC3D,QAAMG,gBAAgB,GAAGN,mBAAmB,CAAC,EAAD,CAA5C;AACA,QAAMO,cAAc,GAAGR,oBAAoB,EAA3C;AACA,QAAMS,QAAQ,GAAGX,WAAW,CAACK,gBAAD,EAAmBG,YAAnB,EAAiCC,gBAAgB,CAACR,eAAe,CAACS,cAAD,CAAhB,CAAjD,CAA5B;AACAA,EAAAA,cAAc,CAACE,GAAf,CAAmBR,cAAnB;AACA,SAAOO,QAAP;AACA,CANM;AAQP,cAAc,aAAd;AACA,cAAc,WAAd;AACA,cAAc,YAAd;AACA,cAAc,SAAd;AACA,cAAc,SAAd;AACA,cAAc,YAAd","sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { AllSagaActions } from './sagas';\nimport { ApplicationState } from './reducers';\n\nconst initialAppState: any = {};\nexport const getStore = (initialState = initialAppState) => {\n\tconst composeEnhancers = composeWithDevTools({});\n\tconst sagaMiddleware = createSagaMiddleware();\n\tconst appStore = createStore(ApplicationState, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\tsagaMiddleware.run(AllSagaActions);\n\treturn appStore;\n};\n\nexport * from './endpoints';\nexport * from './actions';\nexport * from './reducers';\nexport * from './sagas';\nexport * from './types';\nexport * from './requests';\n"]},"metadata":{},"sourceType":"module"}