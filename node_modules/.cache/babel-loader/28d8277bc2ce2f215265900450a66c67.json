{"ast":null,"code":"import { AllTypeActions } from '../types';\nimport { put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { Requests } from '../requests';\nimport { getApiUrl, ENDPOINTS } from '../endpoints';\nimport { showMessage } from '../actions';\nimport Api from '../endpoints/index';\n\nfunction* postLogin({\n  input,\n  type\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.POST_LOGIN);\n    const data = yield Requests.post(apiUrl, input, false);\n\n    if (data && data.success) {\n      localStorage.setItem('backoffice_token', data.token);\n      yield put({\n        type: `${type}_SUCCESS`,\n        data\n      });\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nfunction* getCurrentAdmin({\n  type\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.GET_CURRENT_ADMIN);\n    const data = yield Requests.get(apiUrl);\n\n    if (data && data.success) {\n      yield put({\n        type: `${type}_SUCCESS`,\n        data: data.data\n      });\n      yield put({\n        type: `LOAD_ALL_PERMISSION`,\n        data: data.all_permissions\n      });\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      }); // force logout\n      // localStorage.removeItem('backoffice_token');\n      // window.location.href = '/';\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    }); // force logout\n    // localStorage.removeItem('backoffice_token');\n    // window.location.href = '/';\n  }\n}\n\nfunction* updateAdminAccount({\n  id,\n  input,\n  type\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ACCOUNT, {\n      id\n    });\n    const data = yield Requests.put(apiUrl, input);\n\n    if (data && data.success) {\n      yield put({\n        type: `${type}_SUCCESS`,\n        data: data.account\n      });\n      yield put(showMessage('Update addmin account successful!'));\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nfunction* createAdminAccount({\n  input,\n  type\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.CREATE_ADMIN_ACCOUNT);\n    const data = yield Requests.post(apiUrl, input);\n\n    if (data && data.success) {\n      yield put({\n        type: `${type}_SUCCESS`,\n        data: data.account\n      });\n      yield put(showMessage('Create addmin account successful!'));\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nfunction* getAdminAccounts({\n  type,\n  limit,\n  offset\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ACCOUNTS);\n    const data = yield Requests.get(apiUrl, {\n      limit,\n      offset\n    });\n\n    if (data && data.success) {\n      yield put({\n        type: `${type}_SUCCESS`,\n        data: data.accounts\n      });\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nfunction* getAdminAccount({\n  type,\n  id\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ACCOUNT, {\n      id\n    });\n    const data = yield Requests.get(apiUrl);\n\n    if (data && data.success) {\n      yield put({\n        type: `${type}_SUCCESS`,\n        data: data.account\n      });\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nfunction* updateAdminRole({\n  id,\n  input,\n  type\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ROLE, {\n      id\n    });\n    const data = yield Requests.put(apiUrl, input);\n\n    if (data && data.success) {\n      yield put({\n        type: `${type}_SUCCESS`,\n        data: data.role\n      });\n      yield put(showMessage('Update addmin role successful!'));\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nfunction* createAdminRole({\n  input,\n  type\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.CREATE_ADMIN_ROLE);\n    const data = yield Requests.post(apiUrl, input);\n\n    if (data && data.success) {\n      yield put({\n        type: `${type}_SUCCESS`,\n        data: data.role\n      });\n      yield put(showMessage('Create addmin role successful!'));\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nfunction* getAdminRoles({\n  type,\n  limit,\n  offset\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ROLES);\n    const data = yield Requests.get(apiUrl, {\n      limit,\n      offset\n    });\n\n    if (data && data.success) {\n      yield put({\n        type: `${type}_SUCCESS`,\n        data: data.roles,\n        total: data.total\n      });\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nfunction* getAdminRole({\n  type,\n  id\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    const apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ROLE, {\n      id\n    });\n    const data = yield Requests.get(apiUrl);\n\n    if (data && data.success) {\n      yield put({\n        type: `${type}_SUCCESS`,\n        data: data.role\n      });\n    } else {\n      yield put({\n        type: `${type}_FAIL`,\n        error: data.message\n      });\n    }\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nasync function fetchAsync(func) {\n  const response = await func();\n\n  if (response.ok) {\n    return await response.json();\n  }\n\n  throw new Error('Unexpected error!!!');\n}\n\nfunction* fetchUser() {\n  try {\n    const users = yield fetchAsync(Api.getUsers);\n    yield put({\n      type: AllTypeActions.LOAD_USERS_SUCCESS,\n      data: users\n    });\n  } catch (e) {\n    yield put({\n      type: AllTypeActions.LOAD_USERS_ERROR,\n      error: e.message\n    });\n  }\n}\n\nexport function* usersSaga() {\n  yield takeEvery(AllTypeActions.LOAD_USERS_LOADING, fetchUser);\n}\nexport function* adminActions() {\n  yield takeLatest(AllTypeActions.POST_LOGIN, postLogin);\n  yield takeLatest(AllTypeActions.GET_CURRENT_ADMIN, getCurrentAdmin);\n  yield takeLatest(AllTypeActions.GET_ADMIN_ACCOUNTS, getAdminAccounts);\n  yield takeLatest(AllTypeActions.GET_ADMIN_ACCOUNT, getAdminAccount);\n  yield takeLatest(AllTypeActions.CREATE_ADMIN_ACCOUNT, createAdminAccount);\n  yield takeLatest(AllTypeActions.UPDATE_ADMIN_ACCOUNT, updateAdminAccount);\n  yield takeLatest(AllTypeActions.GET_ADMIN_ROLES, getAdminRoles);\n  yield takeLatest(AllTypeActions.GET_ADMIN_ROLE, getAdminRole);\n  yield takeLatest(AllTypeActions.UPDATE_ADMIN_ROLE, updateAdminRole);\n  yield takeLatest(AllTypeActions.CREATE_ADMIN_ROLE, createAdminRole);\n}\nexport default usersSaga;","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/store/sagas/admin.ts"],"names":["AllTypeActions","put","takeLatest","takeEvery","Requests","getApiUrl","ENDPOINTS","showMessage","Api","postLogin","input","type","apiUrl","POST_LOGIN","data","post","success","localStorage","setItem","token","error","message","e","toString","getCurrentAdmin","GET_CURRENT_ADMIN","get","all_permissions","updateAdminAccount","id","GET_ADMIN_ACCOUNT","account","createAdminAccount","CREATE_ADMIN_ACCOUNT","getAdminAccounts","limit","offset","GET_ADMIN_ACCOUNTS","accounts","getAdminAccount","updateAdminRole","GET_ADMIN_ROLE","role","createAdminRole","CREATE_ADMIN_ROLE","getAdminRoles","GET_ADMIN_ROLES","roles","total","getAdminRole","fetchAsync","func","response","ok","json","Error","fetchUser","users","getUsers","LOAD_USERS_SUCCESS","LOAD_USERS_ERROR","usersSaga","LOAD_USERS_LOADING","adminActions","UPDATE_ADMIN_ACCOUNT","UPDATE_ADMIN_ROLE"],"mappings":"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","sourcesContent":["import { AllTypeActions } from '../types';\nimport { put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport { Requests } from '../requests';\n\nimport { AnyAction } from 'redux';\nimport { getApiUrl, ENDPOINTS } from '../endpoints';\nimport { showMessage } from '../actions';\nimport Api from '../endpoints/index';\n\nfunction* postLogin({ input, type }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.POST_LOGIN);\n\t\tconst data: any = yield Requests.post(apiUrl, input, false);\n\t\tif (data && data.success) {\n\t\t\tlocalStorage.setItem('backoffice_token', data.token);\n\t\t\tyield put({ type: `${type}_SUCCESS`, data });\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nfunction* getCurrentAdmin({ type }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.GET_CURRENT_ADMIN);\n\t\tconst data: any = yield Requests.get(apiUrl);\n\t\tif (data && data.success) {\n\t\t\tyield put({ type: `${type}_SUCCESS`, data: data.data });\n\t\t\tyield put({ type: `LOAD_ALL_PERMISSION`, data: data.all_permissions });\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t\t// force logout\n\t\t\t// localStorage.removeItem('backoffice_token');\n\t\t\t// window.location.href = '/';\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t\t// force logout\n\t\t// localStorage.removeItem('backoffice_token');\n\t\t// window.location.href = '/';\n\t}\n}\n\nfunction* updateAdminAccount({ id, input, type }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ACCOUNT, { id });\n\t\tconst data: any = yield Requests.put(apiUrl, input);\n\t\tif (data && data.success) {\n\t\t\tyield put({ type: `${type}_SUCCESS`, data: data.account });\n\t\t\tyield put(showMessage('Update addmin account successful!'));\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nfunction* createAdminAccount({ input, type }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.CREATE_ADMIN_ACCOUNT);\n\t\tconst data: any = yield Requests.post(apiUrl, input);\n\t\tif (data && data.success) {\n\t\t\tyield put({ type: `${type}_SUCCESS`, data: data.account });\n\t\t\tyield put(showMessage('Create addmin account successful!'));\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nfunction* getAdminAccounts({ type, limit, offset }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ACCOUNTS);\n\t\tconst data: any = yield Requests.get(apiUrl, { limit, offset });\n\t\tif (data && data.success) {\n\t\t\tyield put({ type: `${type}_SUCCESS`, data: data.accounts });\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nfunction* getAdminAccount({ type, id }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ACCOUNT, { id });\n\t\tconst data: any = yield Requests.get(apiUrl);\n\t\tif (data && data.success) {\n\t\t\tyield put({ type: `${type}_SUCCESS`, data: data.account });\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nfunction* updateAdminRole({ id, input, type }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ROLE, { id });\n\t\tconst data: any = yield Requests.put(apiUrl, input);\n\t\tif (data && data.success) {\n\t\t\tyield put({ type: `${type}_SUCCESS`, data: data.role });\n\t\t\tyield put(showMessage('Update addmin role successful!'));\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nfunction* createAdminRole({ input, type }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.CREATE_ADMIN_ROLE);\n\t\tconst data: any = yield Requests.post(apiUrl, input);\n\t\tif (data && data.success) {\n\t\t\tyield put({ type: `${type}_SUCCESS`, data: data.role });\n\t\t\tyield put(showMessage('Create addmin role successful!'));\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nfunction* getAdminRoles({ type, limit, offset }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ROLES);\n\t\tconst data: any = yield Requests.get(apiUrl, { limit, offset });\n\t\tif (data && data.success) {\n\t\t\tyield put({ type: `${type}_SUCCESS`, data: data.roles, total: data.total });\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nfunction* getAdminRole({ type, id }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\tconst apiUrl = getApiUrl(ENDPOINTS.GET_ADMIN_ROLE, { id });\n\t\tconst data: any = yield Requests.get(apiUrl);\n\t\tif (data && data.success) {\n\t\t\tyield put({ type: `${type}_SUCCESS`, data: data.role });\n\t\t} else {\n\t\t\tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t}\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nasync function fetchAsync(func) {\n\tconst response = await func();\n\n\tif (response.ok) {\n\t\treturn await response.json();\n\t}\n\n\tthrow new Error('Unexpected error!!!');\n}\n\nfunction* fetchUser() {\n\ttry {\n\t\tconst users = yield fetchAsync(Api.getUsers);\n\n\t\tyield put({ type: AllTypeActions.LOAD_USERS_SUCCESS, data: users });\n\t} catch (e) {\n\t\tyield put({ type: AllTypeActions.LOAD_USERS_ERROR, error: e.message });\n\t}\n}\n\nexport function* usersSaga() {\n\tyield takeEvery(AllTypeActions.LOAD_USERS_LOADING, fetchUser);\n}\n\nexport function* adminActions() {\n\tyield takeLatest(AllTypeActions.POST_LOGIN, postLogin);\n\tyield takeLatest(AllTypeActions.GET_CURRENT_ADMIN, getCurrentAdmin);\n\tyield takeLatest(AllTypeActions.GET_ADMIN_ACCOUNTS, getAdminAccounts);\n\tyield takeLatest(AllTypeActions.GET_ADMIN_ACCOUNT, getAdminAccount);\n\tyield takeLatest(AllTypeActions.CREATE_ADMIN_ACCOUNT, createAdminAccount);\n\tyield takeLatest(AllTypeActions.UPDATE_ADMIN_ACCOUNT, updateAdminAccount);\n\tyield takeLatest(AllTypeActions.GET_ADMIN_ROLES, getAdminRoles);\n\tyield takeLatest(AllTypeActions.GET_ADMIN_ROLE, getAdminRole);\n\tyield takeLatest(AllTypeActions.UPDATE_ADMIN_ROLE, updateAdminRole);\n\tyield takeLatest(AllTypeActions.CREATE_ADMIN_ROLE, createAdminRole);\n}\nexport default usersSaga;\n"]},"metadata":{},"sourceType":"module"}