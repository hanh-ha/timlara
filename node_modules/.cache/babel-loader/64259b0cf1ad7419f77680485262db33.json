{"ast":null,"code":"var _jsxFileName = \"/var/www/timlara-admin-reactjs/src/pages/package/components/PacketList/index.esm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MaterialTableDemo = () => {\n  _s();\n\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'Surname',\n      field: 'surname'\n    }, {\n      title: 'Birth Year',\n      field: 'birthYear',\n      type: 'numeric'\n    }, {\n      title: 'Birth Place',\n      field: 'birthCity',\n      lookup: {\n        34: 'İstanbul',\n        63: 'Şanlıurfa'\n      }\n    }],\n    data: [{\n      name: 'Mehmet',\n      surname: 'Baran',\n      birthYear: 1987,\n      birthCity: 63\n    }, {\n      name: 'Zerya Betül',\n      surname: 'Baran',\n      birthYear: 2017,\n      birthCity: 34\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(MaterialTable, {\n    title: \"Editable Example\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.push(newData);\n          setState({ ...state,\n            data\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data[data.indexOf(oldData)] = newData;\n          setState({ ...state,\n            data\n          });\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          const data = [...state.data];\n          data.splice(data.indexOf(oldData), 1);\n          setState({ ...state,\n            data\n          });\n        }, 600);\n      })\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MaterialTableDemo, \"j8VCF/YTHATYW7lmPiqDs+/g/Do=\");\n\n_c = MaterialTableDemo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialTableDemo\");","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/pages/package/components/PacketList/index.esm.js"],"names":["React","MaterialTable","MaterialTableDemo","state","setState","useState","columns","title","field","type","lookup","data","name","surname","birthYear","birthCity","onRowAdd","newData","Promise","resolve","setTimeout","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\n\nexport const MaterialTableDemo = () => {\n\tconst [state, setState] = React.useState({\n\t\tcolumns: [\n\t\t\t{ title: 'Name', field: 'name' },\n\t\t\t{ title: 'Surname', field: 'surname' },\n\t\t\t{ title: 'Birth Year', field: 'birthYear', type: 'numeric' },\n\t\t\t{\n\t\t\t\ttitle: 'Birth Place',\n\t\t\t\tfield: 'birthCity',\n\t\t\t\tlookup: { 34: 'İstanbul', 63: 'Şanlıurfa' },\n\t\t\t},\n\t\t],\n\t\tdata: [\n\t\t\t{ name: 'Mehmet', surname: 'Baran', birthYear: 1987, birthCity: 63 },\n\t\t\t{\n\t\t\t\tname: 'Zerya Betül',\n\t\t\t\tsurname: 'Baran',\n\t\t\t\tbirthYear: 2017,\n\t\t\t\tbirthCity: 34,\n\t\t\t},\n\t\t],\n\t});\n\n\treturn (\n\t\t<MaterialTable\n\t\t\ttitle='Editable Example'\n\t\t\tcolumns={state.columns}\n\t\t\tdata={state.data}\n\t\t\teditable={{\n\t\t\t\tonRowAdd: (newData) =>\n\t\t\t\t\tnew Promise((resolve) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\tconst data = [...state.data];\n\t\t\t\t\t\t\tdata.push(newData);\n\t\t\t\t\t\t\tsetState({ ...state, data });\n\t\t\t\t\t\t}, 600);\n\t\t\t\t\t}),\n\t\t\t\tonRowUpdate: (newData, oldData) =>\n\t\t\t\t\tnew Promise((resolve) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\tconst data = [...state.data];\n\t\t\t\t\t\t\tdata[data.indexOf(oldData)] = newData;\n\t\t\t\t\t\t\tsetState({ ...state, data });\n\t\t\t\t\t\t}, 600);\n\t\t\t\t\t}),\n\t\t\t\tonRowDelete: (oldData) =>\n\t\t\t\t\tnew Promise((resolve) => {\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\tconst data = [...state.data];\n\t\t\t\t\t\t\tdata.splice(data.indexOf(oldData), 1);\n\t\t\t\t\t\t\tsetState({ ...state, data });\n\t\t\t\t\t\t}, 600);\n\t\t\t\t\t}),\n\t\t\t}}\n\t\t/>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}