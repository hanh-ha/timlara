{"ast":null,"code":"import _slicedToArray from\"/var/www/timlara-admin-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import TextField from'@material-ui/core/TextField';import OutlinedInput from'@material-ui/core/OutlinedInput';import InputAdornment from'@material-ui/core/InputAdornment';import IconButton from'@material-ui/core/IconButton';import Visibility from'@material-ui/icons/Visibility';import VisibilityOff from'@material-ui/icons/VisibilityOff';import FormControl from'@material-ui/core/FormControl';import InputLabel from'@material-ui/core/InputLabel';import{makeStyles}from'@material-ui/core/styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStylesOutline=makeStyles(function(theme){return{root:{'&:hover .MuiOutlinedInput-notchedOutline':{borderColor:'#FFF'}},notchedOutline:{borderColor:'#FFF'}};});var useStyles=makeStyles(function(theme){return{root:{'&:hover .MuiOutlinedInput-notchedOutline':{borderColor:'#FFF'},'& input:valid + fieldset':{borderColor:'#FFF'},'& input:valid':{color:'#FFF'}}};});var inputLabelStyle=makeStyles(function(theme){return{root:{color:'#FFF'}};});var useLabelStyle=makeStyles(function(theme){return{labelColor:{color:'#FFF'}};});export function InputText(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPasswd=_useState2[0],setShowPasswd=_useState2[1];var _props$type=props.type,type=_props$type===void 0?'text':_props$type,_props$label=props.label,label=_props$label===void 0?'':_props$label,_props$error=props.error,error=_props$error===void 0?false:_props$error,_props$autocomplete=props.autocomplete,autocomplete=_props$autocomplete===void 0?false:_props$autocomplete,_props$onBlur=props.onBlur,onBlur=_props$onBlur===void 0?function(){}:_props$onBlur,_props$onChange=props.onChange,onChange=_props$onChange===void 0?function(){}:_props$onChange,_props$value=props.value,value=_props$value===void 0?'':_props$value,_props$isWhite=props.isWhite,isWhite=_props$isWhite===void 0?false:_props$isWhite;var classes=useStyles();var classesOutline=useStylesOutline();var labelClasses=useLabelStyle();var inputLabelClasses=inputLabelStyle();return/*#__PURE__*/_jsx(\"div\",{className:\"field-container\",children:/*#__PURE__*/_jsxs(FormControl,{fullWidth:true,variant:\"outlined\",children:[type==='password'&&/*#__PURE__*/_jsx(InputLabel,{className:isWhite?labelClasses.labelColor:undefined,children:label}),type==='password'?/*#__PURE__*/_jsx(OutlinedInput,{type:showPasswd?'text':'password',label:label,error:error,value:value,onBlur:onBlur,onChange:onChange,classes:isWhite?classesOutline:undefined,endAdornment:/*#__PURE__*/_jsx(InputAdornment,{position:\"end\",children:/*#__PURE__*/_jsx(IconButton,{\"aria-label\":\"toggle password visibility\",onClick:function onClick(){return setShowPasswd(!showPasswd);},edge:\"end\",children:showPasswd?/*#__PURE__*/_jsx(Visibility,{}):/*#__PURE__*/_jsx(VisibilityOff,{})})}),inputProps:autocomplete?{autoComplete:'new-password'}:undefined}):/*#__PURE__*/_jsx(TextField,{type:type,label:label,error:error,value:value,onBlur:onBlur,onChange:onChange,classes:isWhite?classes:undefined,variant:\"outlined\",InputLabelProps:type==='date'?{shrink:true,classes:isWhite?inputLabelClasses:undefined}:{classes:isWhite?inputLabelClasses:undefined}})]})});}","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/components/InputText/index.tsx"],"names":["React","useState","TextField","OutlinedInput","InputAdornment","IconButton","Visibility","VisibilityOff","FormControl","InputLabel","makeStyles","useStylesOutline","theme","root","borderColor","notchedOutline","useStyles","color","inputLabelStyle","useLabelStyle","labelColor","InputText","props","showPasswd","setShowPasswd","type","label","error","autocomplete","onBlur","onChange","value","isWhite","classes","classesOutline","labelClasses","inputLabelClasses","undefined","autoComplete","shrink"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { makeStyles } from '@material-ui/core/styles';\n\ninterface IProps {\n\terror?: boolean;\n\ttype?: string;\n\tlabel?: string;\n\tonBlur?: () => void;\n\tonChange?: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n\tvalue?: string;\n\tisWhite?: boolean;\n\tautocomplete?: boolean;\n}\n\nconst useStylesOutline = makeStyles((theme) => ({\n\troot: {\n\t\t'&:hover .MuiOutlinedInput-notchedOutline': {\n\t\t\tborderColor: '#FFF',\n\t\t},\n\t},\n\tnotchedOutline: {\n\t\tborderColor: '#FFF',\n\t},\n}));\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\t'&:hover .MuiOutlinedInput-notchedOutline': {\n\t\t\tborderColor: '#FFF',\n\t\t},\n\t\t'& input:valid + fieldset': {\n\t\t\tborderColor: '#FFF',\n\t\t},\n\t\t'& input:valid': {\n\t\t\tcolor: '#FFF',\n\t\t},\n\t},\n}));\n\nconst inputLabelStyle = makeStyles((theme) => ({\n\troot: {\n\t\tcolor: '#FFF',\n\t},\n}));\n\nconst useLabelStyle = makeStyles((theme) => ({\n\tlabelColor: {\n\t\tcolor: '#FFF',\n\t},\n}));\n\nexport function InputText(props: IProps) {\n\tconst [showPasswd, setShowPasswd] = useState(false);\n\tconst { type = 'text', label = '', error = false, autocomplete = false, onBlur = () => {}, onChange = () => {}, value = '', isWhite = false } = props;\n\tconst classes = useStyles();\n\tconst classesOutline = useStylesOutline();\n\tconst labelClasses = useLabelStyle();\n\tconst inputLabelClasses = inputLabelStyle();\n\treturn (\n\t\t<div className='field-container'>\n\t\t\t<FormControl fullWidth variant='outlined'>\n\t\t\t\t{type === 'password' && <InputLabel className={isWhite ? labelClasses.labelColor : undefined}>{label}</InputLabel>}\n\t\t\t\t{type === 'password' ? (\n\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\ttype={showPasswd ? 'text' : 'password'}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\terror={error}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tclasses={isWhite ? classesOutline : undefined}\n\t\t\t\t\t\tendAdornment={\n\t\t\t\t\t\t\t<InputAdornment position='end'>\n\t\t\t\t\t\t\t\t<IconButton aria-label='toggle password visibility' onClick={() => setShowPasswd(!showPasswd)} edge='end'>\n\t\t\t\t\t\t\t\t\t{showPasswd ? <Visibility /> : <VisibilityOff />}\n\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinputProps={\n\t\t\t\t\t\t\tautocomplete\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\tautoComplete: 'new-password',\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: undefined\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\terror={error}\n\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\tonBlur={onBlur}\n\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\tclasses={isWhite ? classes : undefined}\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tInputLabelProps={\n\t\t\t\t\t\t\ttype === 'date'\n\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\tshrink: true,\n\t\t\t\t\t\t\t\t\t\tclasses: isWhite ? inputLabelClasses : undefined,\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\tclasses: isWhite ? inputLabelClasses : undefined,\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</FormControl>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}