{"ast":null,"code":"var _jsxFileName = \"/var/www/timlara-admin-reactjs/src/pages/overview/components/Dates/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { DateRangePicker } from \"react-dates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ReactdatesDatepicker = () => {\n  _s();\n\n  const [date, setDate] = useState(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  function onDateChange(date) {\n    setDate(date);\n  }\n\n  function onFocusChange({\n    focused\n  }) {\n    setIsFocused(focused);\n  }\n\n  return /*#__PURE__*/_jsxDEV(DateRangePicker, {\n    startDate: this.state.startDate // momentPropTypes.momentObj or null,\n    ,\n    startDateId: \"your_unique_start_date_id\" // PropTypes.string.isRequired,\n    ,\n    endDate: this.state.endDate // momentPropTypes.momentObj or null,\n    ,\n    endDateId: \"your_unique_end_date_id\" // PropTypes.string.isRequired,\n    ,\n    onDatesChange: ({\n      startDate,\n      endDate\n    }) => this.setState({\n      startDate,\n      endDate\n    }) // PropTypes.func.isRequired,\n    ,\n    focusedInput: this.state.focusedInput // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n    ,\n    onFocusChange: focusedInput => this.setState({\n      focusedInput\n    }) // PropTypes.func.isRequired,\n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactdatesDatepicker, \"lW48iJuITVhQIc2xPxIyujn57gc=\");\n\n_c = ReactdatesDatepicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactdatesDatepicker\");","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/pages/overview/components/Dates/index.tsx"],"names":["React","useState","DateRangePicker","ReactdatesDatepicker","date","setDate","isFocused","setIsFocused","onDateChange","onFocusChange","focused","state","startDate","endDate","setState","focusedInput"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,wBAAP;AACA,OAAO,qCAAP;AACA,SAASC,eAAT,QAAgC,aAAhC;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASO,YAAT,CAAsBJ,IAAtB,EAA4B;AAC1BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AAED,WAASK,aAAT,CAAuB;AAAEC,IAAAA;AAAF,GAAvB,EAAoC;AAClCH,IAAAA,YAAY,CAACG,OAAD,CAAZ;AACD;;AAED,sBACE,QAAC,eAAD;AACI,IAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,SAD1B,CACqC;AADrC;AAEI,IAAA,WAAW,EAAC,2BAFhB,CAE4C;AAF5C;AAGI,IAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAHxB,CAGiC;AAHjC;AAII,IAAA,SAAS,EAAC,yBAJd,CAIwC;AAJxC;AAKI,IAAA,aAAa,EAAE,CAAC;AAAED,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAD,KAA4B,KAAKC,QAAL,CAAc;AAAEF,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAd,CAL/C,CAKsF;AALtF;AAMI,IAAA,YAAY,EAAE,KAAKF,KAAL,CAAWI,YAN7B,CAM2C;AAN3C;AAOI,IAAA,aAAa,EAAEA,YAAY,IAAI,KAAKD,QAAL,CAAc;AAAEC,MAAAA;AAAF,KAAd,CAPnC,CAOoE;;AAPpE;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvBM;;GAAMZ,oB;;KAAAA,oB","sourcesContent":["import React, { useState } from \"react\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { DateRangePicker } from \"react-dates\";\n\nexport const ReactdatesDatepicker = () => {\n  const [date, setDate] = useState(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  function onDateChange(date) {\n    setDate(date);\n  }\n\n  function onFocusChange({ focused }) {\n    setIsFocused(focused);\n  }\n\n  return (\n    <DateRangePicker\n        startDate={this.state.startDate} // momentPropTypes.momentObj or null,\n        startDateId=\"your_unique_start_date_id\" // PropTypes.string.isRequired,\n        endDate={this.state.endDate} // momentPropTypes.momentObj or null,\n        endDateId=\"your_unique_end_date_id\" // PropTypes.string.isRequired,\n        onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate })} // PropTypes.func.isRequired,\n        focusedInput={this.state.focusedInput} // PropTypes.oneOf([START_DATE, END_DATE]) or null,\n        onFocusChange={focusedInput => this.setState({ focusedInput })} // PropTypes.func.isRequired,\n/>\n  );\n}"]},"metadata":{},"sourceType":"module"}