{"ast":null,"code":"import{createStore,applyMiddleware}from'redux';import createSagaMiddleware from'redux-saga';import{composeWithDevTools}from'redux-devtools-extension';import{AllSagaActions}from'./sagas';import{ApplicationState}from'./reducers';var initialAppState={};export var getStore=function getStore(){var initialState=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialAppState;var composeEnhancers=composeWithDevTools({});var sagaMiddleware=createSagaMiddleware();var appStore=createStore(ApplicationState,initialState,composeEnhancers(applyMiddleware(sagaMiddleware)));sagaMiddleware.run(AllSagaActions);return appStore;};export*from'./endpoints';export*from'./actions';export*from'./reducers';export*from'./sagas';export*from'./types';export*from'./requests';","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/store/index.ts"],"names":["createStore","applyMiddleware","createSagaMiddleware","composeWithDevTools","AllSagaActions","ApplicationState","initialAppState","getStore","initialState","composeEnhancers","sagaMiddleware","appStore","run"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,oBAAP,KAAiC,YAAjC,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,cAAT,KAA+B,SAA/B,CACA,OAASC,gBAAT,KAAiC,YAAjC,CAEA,GAAMC,CAAAA,eAAoB,CAAG,EAA7B,CACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAoC,IAAnCC,CAAAA,YAAmC,2DAApBF,eAAoB,CAC3D,GAAMG,CAAAA,gBAAgB,CAAGN,mBAAmB,CAAC,EAAD,CAA5C,CACA,GAAMO,CAAAA,cAAc,CAAGR,oBAAoB,EAA3C,CACA,GAAMS,CAAAA,QAAQ,CAAGX,WAAW,CAACK,gBAAD,CAAmBG,YAAnB,CAAiCC,gBAAgB,CAACR,eAAe,CAACS,cAAD,CAAhB,CAAjD,CAA5B,CACAA,cAAc,CAACE,GAAf,CAAmBR,cAAnB,EACA,MAAOO,CAAAA,QAAP,CACA,CANM,CAQP,WAAc,aAAd,CACA,WAAc,WAAd,CACA,WAAc,YAAd,CACA,WAAc,SAAd,CACA,WAAc,SAAd,CACA,WAAc,YAAd","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { AllSagaActions } from './sagas';\nimport { ApplicationState } from './reducers';\n\nconst initialAppState: any = {};\nexport const getStore = (initialState = initialAppState) => {\n\tconst composeEnhancers = composeWithDevTools({});\n\tconst sagaMiddleware = createSagaMiddleware();\n\tconst appStore = createStore(ApplicationState, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\tsagaMiddleware.run(AllSagaActions);\n\treturn appStore;\n};\n\nexport * from './endpoints';\nexport * from './actions';\nexport * from './reducers';\nexport * from './sagas';\nexport * from './types';\nexport * from './requests';\n"]},"metadata":{},"sourceType":"module"}