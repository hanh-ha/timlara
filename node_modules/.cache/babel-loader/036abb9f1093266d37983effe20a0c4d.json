{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['exports', 'module'], factory);\n  } else if (typeof exports !== 'undefined' && typeof module !== 'undefined') {\n    factory(exports, module);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, mod);\n    global.tagsInput = mod.exports;\n  }\n})(this, function (exports, module) {\n  'use strict';\n\n  module.exports = tagsInput;\n  var BACKSPACE = 8,\n      TAB = 9,\n      ENTER = 13,\n      LEFT = 37,\n      RIGHT = 39,\n      DELETE = 46,\n      COMMA = 188;\n  var SEPERATOR = ',';\n  var COPY_PROPS = 'placeholder pattern spellcheck autocomplete autocapitalize autofocus accessKey accept lang minLength maxLength required'.split(' ');\n\n  function tagsInput(input) {\n    function createElement(type, name, text, attributes) {\n      var el = document.createElement(type);\n      if (name) el.className = name;\n      if (text) el.textContent = text;\n\n      for (var key in attributes) {\n        el.setAttribute('data-' + key, attributes[key]);\n      }\n\n      return el;\n    }\n\n    function $(selector, all) {\n      return all === true ? Array.prototype.slice.call(base.querySelectorAll(selector)) : base.querySelector(selector);\n    }\n\n    function getValue() {\n      return $('.tag', true).map(function (tag) {\n        return tag.textContent;\n      }).concat(base.input.value || []).join(SEPERATOR);\n    }\n\n    function setValue(value) {\n      $('.tag', true).forEach(function (t) {\n        return base.removeChild(t);\n      });\n      savePartialInput(value);\n    }\n\n    function save() {\n      input.value = getValue();\n      input.dispatchEvent(new Event('change'));\n    }\n\n    function addTag(text) {\n      if (~text.indexOf(SEPERATOR)) text = text.split(SEPERATOR);\n      if (Array.isArray(text)) return text.forEach(addTag);\n      var tag = text && text.trim();\n      if (!tag) return false;\n\n      if (!input.getAttribute('duplicates')) {\n        var _ret = function () {\n          var exisingTag = $('[data-tag=\"' + tag + '\"]');\n\n          if (exisingTag) {\n            exisingTag.classList.add('dupe');\n            setTimeout(function () {\n              return exisingTag.classList.remove('dupe');\n            }, 100);\n            return {\n              v: false\n            };\n          }\n        }();\n\n        if (typeof _ret === 'object') return _ret.v;\n      }\n\n      base.insertBefore(createElement('span', 'tag', tag, {\n        tag: tag\n      }), base.input);\n    }\n\n    function select(el) {\n      var sel = $('.selected');\n      if (sel) sel.classList.remove('selected');\n      if (el) el.classList.add('selected');\n    }\n\n    function setInputWidth() {\n      var last = $('.tag', true).pop(),\n          w = base.offsetWidth;\n      if (!w) return;\n      base.input.style.width = Math.max(w - (last ? last.offsetLeft + last.offsetWidth : 5) - 5, w / 4) + 'px';\n    }\n\n    function savePartialInput(value) {\n      if (typeof value !== 'string' && !Array.isArray(value)) {\n        value = base.input.value;\n      }\n\n      if (addTag(value) !== false) {\n        base.input.value = '';\n        save();\n        setInputWidth();\n      }\n    }\n\n    function refocus(e) {\n      if (e.target.classList.contains('tag')) select(e.target);\n      if (e.target === base.input) return select();\n      base.input.focus();\n      e.preventDefault();\n      return false;\n    }\n\n    var base = createElement('div', 'tags-input'),\n        sib = input.nextSibling;\n    input.parentNode[sib ? 'insertBefore' : 'appendChild'](base, sib);\n    input.style.cssText = 'position:absolute;left:0;top:-99px;width:1px;height:1px;opacity:0.01;';\n    input.tabIndex = -1;\n    base.input = createElement('input');\n    base.input.setAttribute('type', 'text');\n    COPY_PROPS.forEach(function (prop) {\n      if (input[prop] !== base.input[prop]) {\n        base.input[prop] = input[prop];\n\n        try {\n          delete input[prop];\n        } catch (e) {}\n      }\n    });\n    base.appendChild(base.input);\n    input.addEventListener('focus', function () {\n      base.input.focus();\n    });\n    base.input.addEventListener('focus', function () {\n      base.classList.add('focus');\n      select();\n    });\n    base.input.addEventListener('blur', function () {\n      base.classList.remove('focus');\n      select();\n      savePartialInput();\n    });\n    base.input.addEventListener('keydown', function (e) {\n      var el = base.input,\n          key = e.keyCode || e.which,\n          selectedTag = $('.tag.selected'),\n          pos = el.selectionStart === el.selectionEnd && el.selectionStart,\n          last = $('.tag', true).pop();\n      setInputWidth();\n\n      if (key === ENTER || key === COMMA || key === TAB) {\n        if (!el.value && key !== COMMA) return;\n        savePartialInput();\n      } else if (key === DELETE && selectedTag) {\n        if (selectedTag.nextSibling !== base.input) select(selectedTag.nextSibling);\n        base.removeChild(selectedTag);\n        setInputWidth();\n        save();\n      } else if (key === BACKSPACE) {\n        if (selectedTag) {\n          select(selectedTag.previousSibling);\n          base.removeChild(selectedTag);\n          setInputWidth();\n          save();\n        } else if (last && pos === 0) {\n          select(last);\n        } else {\n          return;\n        }\n      } else if (key === LEFT) {\n        if (selectedTag) {\n          if (selectedTag.previousSibling) {\n            select(selectedTag.previousSibling);\n          }\n        } else if (pos !== 0) {\n          return;\n        } else {\n          select(last);\n        }\n      } else if (key === RIGHT) {\n        if (!selectedTag) return;\n        select(selectedTag.nextSibling);\n      } else {\n        return select();\n      }\n\n      e.preventDefault();\n      return false;\n    });\n    base.input.addEventListener('input', function () {\n      input.value = getValue();\n      input.dispatchEvent(new Event('input'));\n    });\n    base.input.addEventListener('paste', function () {\n      return setTimeout(savePartialInput, 0);\n    });\n    base.addEventListener('mousedown', refocus);\n    base.addEventListener('touchstart', refocus);\n    base.setValue = setValue;\n    base.getValue = getValue;\n    savePartialInput(input.value);\n  }\n\n  tagsInput.enhance = tagsInput.tagsInput = tagsInput;\n});","map":{"version":3,"sources":["src/tags-input.js"],"names":[],"mappings":";;;;;;;;;;;;;;;mBAYwB,S;AAZxB,MAAM,SAAS,GAAG,CAAlB;AAAA,MACC,GAAG,GAAG,CADP;AAAA,MAEC,KAAK,GAAG,EAFT;AAAA,MAGC,IAAI,GAAG,EAHR;AAAA,MAIC,KAAK,GAAG,EAJT;AAAA,MAKC,MAAM,GAAG,EALV;AAAA,MAMC,KAAK,GAAG,GANT;AAQA,MAAM,SAAS,GAAG,GAAlB;AAEA,MAAM,UAAU,GAAG,0HAA0H,KAA1H,CAAgI,GAAhI,CAAnB;;AAEe,WAAS,SAAT,CAAmB,KAAnB,EAA0B;AACxC,aAAS,aAAT,CAAuB,IAAvB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,UAAzC,EAAqD;AACpD,UAAI,EAAE,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAT;AACA,UAAI,IAAJ,EAAU,EAAE,CAAC,SAAH,GAAe,IAAf;AACV,UAAI,IAAJ,EAAU,EAAE,CAAC,WAAH,GAAiB,IAAjB;;AACV,WAAK,IAAI,GAAT,IAAgB,UAAhB,EAA4B;AAC3B,QAAA,EAAE,CAAC,YAAH,CAAe,UAAS,GAAxB,EAA+B,UAAU,CAAC,GAAD,CAAzC;AAED;;AAAA,aAAO,EAAP;AAGD;;AAAA,aAAS,CAAT,CAAW,QAAX,EAAqB,GAArB,EAA0B;AACzB,aAAO,GAAG,KAAG,IAAN,GAAa,KAAK,CAAC,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAAI,CAAC,gBAAL,CAAsB,QAAtB,CAA3B,CAAb,GAA2E,IAAI,CAAC,aAAL,CAAmB,QAAnB,CAAlF;AAGD;;AAAA,aAAS,QAAT,GAAoB;AACnB,aAAO,CAAC,CAAC,MAAD,EAAS,IAAT,CAAD,CACL,GADK,CACA,UAAA,GAAA,EAAG;AAAA,eAAI,GAAG,CAAC,WAAR;AAAmB,OADtB,EAEL,MAFK,CAEE,IAAI,CAAC,KAAL,CAAW,KAAX,IAAoB,EAFtB,EAGL,IAHK,CAGA,SAHA,CAAP;AAMD;;AAAA,aAAS,QAAT,CAAkB,KAAlB,EAAyB;AACxB,MAAA,CAAC,CAAC,MAAD,EAAS,IAAT,CAAD,CAAgB,OAAhB,CAAyB,UAAA,CAAA,EAAC;AAAA,eAAI,IAAI,CAAC,WAAL,CAAiB,CAAjB,CAAJ;AAAuB,OAAjD;AACA,MAAA,gBAAgB,CAAC,KAAD,CAAhB;AAGD;;AAAA,aAAS,IAAT,GAAgB;AACf,MAAA,KAAK,CAAC,KAAN,GAAc,QAAQ,EAAtB;AACA,MAAA,KAAK,CAAC,aAAN,CAAoB,IAAI,KAAJ,CAAU,QAAV,CAApB;AAID;;AAAA,aAAS,MAAT,CAAgB,IAAhB,EAAsB;AAErB,UAAI,CAAC,IAAI,CAAC,OAAL,CAAa,SAAb,CAAL,EAA8B,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,SAAX,CAAP;AAC9B,UAAI,KAAK,CAAC,OAAN,CAAc,IAAd,CAAJ,EAAyB,OAAO,IAAI,CAAC,OAAL,CAAa,MAAb,CAAP;AAEzB,UAAI,GAAG,GAAG,IAAI,IAAI,IAAI,CAAC,IAAL,EAAlB;AAEA,UAAI,CAAC,GAAL,EAAU,OAAO,KAAP;;AAGV,UAAI,CAAC,KAAK,CAAC,YAAN,CAAmB,YAAnB,CAAL,EAAuC;AAAA,YAAA,IAAA,GAAA,YAAA;AACtC,cAAI,UAAU,GAAG,CAAC,CAAA,gBAAe,GAAf,GAAkB,IAAlB,CAAlB;;AACA,cAAI,UAAJ,EAAgB;AACf,YAAA,UAAU,CAAC,SAAX,CAAqB,GAArB,CAAyB,MAAzB;AACA,YAAA,UAAU,CAAE,YAAA;AAAA,qBAAM,UAAU,CAAC,SAAX,CAAqB,MAArB,CAA4B,MAA5B,CAAN;AAAyC,aAA3C,EAA8C,GAA9C,CAAV;AACA,mBAAA;AAAA,cAAA,CAAA,EAAO;AAAP,aAAA;AACA;AAAA,SANqC,EAAA;;AAMrC,YAAA,OAAA,IAAA,KAAA,QAAA,EAAA,OAAA,IAAA,CAAA,CAAA;AAGF;;AAAA,MAAA,IAAI,CAAC,YAAL,CACC,aAAa,CAAC,MAAD,EAAS,KAAT,EAAgB,GAAhB,EAAqB;AAAE,QAAA,GAAG,EAAH;AAAF,OAArB,CADd,EAEC,IAAI,CAAC,KAFN;AAMD;;AAAA,aAAS,MAAT,CAAgB,EAAhB,EAAoB;AACnB,UAAI,GAAG,GAAG,CAAC,CAAC,WAAD,CAAX;AACA,UAAI,GAAJ,EAAS,GAAG,CAAC,SAAJ,CAAc,MAAd,CAAqB,UAArB;AACT,UAAI,EAAJ,EAAQ,EAAE,CAAC,SAAH,CAAa,GAAb,CAAiB,UAAjB;AAGT;;AAAA,aAAS,aAAT,GAAyB;AACxB,UAAI,IAAI,GAAG,CAAC,CAAC,MAAD,EAAQ,IAAR,CAAD,CAAe,GAAf,EAAX;AAAA,UACC,CAAC,GAAG,IAAI,CAAC,WADV;AAEA,UAAI,CAAC,CAAL,EAAQ;AACR,MAAA,IAAI,CAAC,KAAL,CAAW,KAAX,CAAiB,KAAjB,GAAyB,IAAI,CAAC,GAAL,CACxB,CAAC,IAAI,IAAI,GAAI,IAAI,CAAC,UAAL,GAAgB,IAAI,CAAC,WAAzB,GAAwC,CAAhD,CAAD,GAAsD,CAD9B,EAExB,CAAC,GAAC,CAFsB,IAGrB,IAHJ;AAMD;;AAAA,aAAS,gBAAT,CAA0B,KAA1B,EAAiC;AAChC,UAAI,OAAO,KAAP,KAAe,QAAf,IAA2B,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,CAAhC,EAAsD;AAErD,QAAA,KAAK,GAAG,IAAI,CAAC,KAAL,CAAW,KAAnB;AAED;;AAAA,UAAI,MAAM,CAAC,KAAD,CAAN,KAAgB,KAApB,EAA2B;AAC1B,QAAA,IAAI,CAAC,KAAL,CAAW,KAAX,GAAmB,EAAnB;AACA,QAAA,IAAI;AACJ,QAAA,aAAa;AACb;AAGF;;AAAA,aAAS,OAAT,CAAiB,CAAjB,EAAoB;AACnB,UAAI,CAAC,CAAC,MAAF,CAAS,SAAT,CAAmB,QAAnB,CAA4B,KAA5B,CAAJ,EAAwC,MAAM,CAAC,CAAC,CAAC,MAAH,CAAN;AACxC,UAAI,CAAC,CAAC,MAAF,KAAW,IAAI,CAAC,KAApB,EAA2B,OAAO,MAAM,EAAb;AAC3B,MAAA,IAAI,CAAC,KAAL,CAAW,KAAX;AACA,MAAA,CAAC,CAAC,cAAF;AACA,aAAO,KAAP;AAGD;;AAAA,QAAI,IAAI,GAAG,aAAa,CAAC,KAAD,EAAQ,YAAR,CAAxB;AAAA,QACC,GAAG,GAAG,KAAK,CAAC,WADb;AAEA,IAAA,KAAK,CAAC,UAAN,CAAiB,GAAG,GAAC,cAAD,GAAgB,aAApC,EAAmD,IAAnD,EAAyD,GAAzD;AAEA,IAAA,KAAK,CAAC,KAAN,CAAY,OAAZ,GAAsB,uEAAtB;AACA,IAAA,KAAK,CAAC,QAAN,GAAiB,CAAC,CAAlB;AAEA,IAAA,IAAI,CAAC,KAAL,GAAa,aAAa,CAAC,OAAD,CAA1B;AACA,IAAA,IAAI,CAAC,KAAL,CAAW,YAAX,CAAwB,MAAxB,EAAgC,MAAhC;AACA,IAAA,UAAU,CAAC,OAAX,CAAoB,UAAA,IAAA,EAAQ;AAC3B,UAAI,KAAK,CAAC,IAAD,CAAL,KAAc,IAAI,CAAC,KAAL,CAAW,IAAX,CAAlB,EAAoC;AACnC,QAAA,IAAI,CAAC,KAAL,CAAW,IAAX,IAAmB,KAAK,CAAC,IAAD,CAAxB;;AACA,YAAI;AAAE,iBAAO,KAAK,CAAC,IAAD,CAAZ;AAAqB,SAA3B,CAA2B,OAAM,CAAN,EAAQ,CAAE;AACrC;AACD,KALD;AAMA,IAAA,IAAI,CAAC,WAAL,CAAiB,IAAI,CAAC,KAAtB;AAEA,IAAA,KAAK,CAAC,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;AACrC,MAAA,IAAI,CAAC,KAAL,CAAW,KAAX;AACA,KAFD;AAIA,IAAA,IAAI,CAAC,KAAL,CAAW,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AAC1C,MAAA,IAAI,CAAC,SAAL,CAAe,GAAf,CAAmB,OAAnB;AACA,MAAA,MAAM;AACN,KAHD;AAKA,IAAA,IAAI,CAAC,KAAL,CAAW,gBAAX,CAA4B,MAA5B,EAAoC,YAAM;AACzC,MAAA,IAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,OAAtB;AACA,MAAA,MAAM;AACN,MAAA,gBAAgB;AAChB,KAJD;AAMA,IAAA,IAAI,CAAC,KAAL,CAAW,gBAAX,CAA4B,SAA5B,EAAuC,UAAA,CAAA,EAAK;AAC3C,UAAI,EAAE,GAAG,IAAI,CAAC,KAAd;AAAA,UACC,GAAG,GAAG,CAAC,CAAC,OAAF,IAAa,CAAC,CAAC,KADtB;AAAA,UAEC,WAAW,GAAG,CAAC,CAAC,eAAD,CAFhB;AAAA,UAGC,GAAG,GAAG,EAAE,CAAC,cAAH,KAAoB,EAAE,CAAC,YAAvB,IAAuC,EAAE,CAAC,cAHjD;AAAA,UAIC,IAAI,GAAG,CAAC,CAAC,MAAD,EAAQ,IAAR,CAAD,CAAe,GAAf,EAJR;AAMA,MAAA,aAAa;;AAEb,UAAI,GAAG,KAAG,KAAN,IAAe,GAAG,KAAG,KAArB,IAA8B,GAAG,KAAG,GAAxC,EAA6C;AAC5C,YAAI,CAAC,EAAE,CAAC,KAAJ,IAAa,GAAG,KAAG,KAAvB,EAA8B;AAC9B,QAAA,gBAAgB;AAChB,OAHD,MAIK,IAAI,GAAG,KAAG,MAAN,IAAgB,WAApB,EAAiC;AACrC,YAAI,WAAW,CAAC,WAAZ,KAA0B,IAAI,CAAC,KAAnC,EAA0C,MAAM,CAAC,WAAW,CAAC,WAAb,CAAN;AAC1C,QAAA,IAAI,CAAC,WAAL,CAAiB,WAAjB;AACA,QAAA,aAAa;AACb,QAAA,IAAI;AACJ,OALI,MAMA,IAAI,GAAG,KAAG,SAAV,EAAqB;AACzB,YAAI,WAAJ,EAAiB;AAChB,UAAA,MAAM,CAAC,WAAW,CAAC,eAAb,CAAN;AACA,UAAA,IAAI,CAAC,WAAL,CAAiB,WAAjB;AACA,UAAA,aAAa;AACb,UAAA,IAAI;AACJ,SALD,MAMK,IAAI,IAAI,IAAI,GAAG,KAAG,CAAlB,EAAqB;AACzB,UAAA,MAAM,CAAC,IAAD,CAAN;AACA,SAFI,MAGA;AACJ;AACA;AACD,OAbI,MAcA,IAAI,GAAG,KAAG,IAAV,EAAgB;AACpB,YAAI,WAAJ,EAAiB;AAChB,cAAI,WAAW,CAAC,eAAhB,EAAiC;AAChC,YAAA,MAAM,CAAC,WAAW,CAAC,eAAb,CAAN;AACA;AACD,SAJD,MAKK,IAAI,GAAG,KAAG,CAAV,EAAa;AACjB;AACA,SAFI,MAGA;AACJ,UAAA,MAAM,CAAC,IAAD,CAAN;AACA;AACD,OAZI,MAaA,IAAI,GAAG,KAAG,KAAV,EAAiB;AACrB,YAAI,CAAC,WAAL,EAAkB;AAClB,QAAA,MAAM,CAAC,WAAW,CAAC,WAAb,CAAN;AACA,OAHI,MAIA;AACJ,eAAO,MAAM,EAAb;AAGD;;AAAA,MAAA,CAAC,CAAC,cAAF;AACA,aAAO,KAAP;AACA,KAxDD;AA4DA,IAAA,IAAI,CAAC,KAAL,CAAW,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AAC1C,MAAA,KAAK,CAAC,KAAN,GAAc,QAAQ,EAAtB;AACA,MAAA,KAAK,CAAC,aAAN,CAAoB,IAAI,KAAJ,CAAU,OAAV,CAApB;AACA,KAHD;AAMA,IAAA,IAAI,CAAC,KAAL,CAAW,gBAAX,CAA4B,OAA5B,EAAqC,YAAA;AAAA,aAAM,UAAU,CAAC,gBAAD,EAAmB,CAAnB,CAAhB;AAAqC,KAA1E;AAEA,IAAA,IAAI,CAAC,gBAAL,CAAsB,WAAtB,EAAmC,OAAnC;AACA,IAAA,IAAI,CAAC,gBAAL,CAAsB,YAAtB,EAAoC,OAApC;AAEA,IAAA,IAAI,CAAC,QAAL,GAAgB,QAAhB;AACA,IAAA,IAAI,CAAC,QAAL,GAAgB,QAAhB;AAGA,IAAA,gBAAgB,CAAC,KAAK,CAAC,KAAP,CAAhB;AAID;;AAAA,EAAA,SAAS,CAAC,OAAV,GAAoB,SAAS,CAAC,SAAV,GAAsB,SAA1C;AAAoD,C","sourcesContent":["const BACKSPACE = 8,\n\tTAB = 9,\n\tENTER = 13,\n\tLEFT = 37,\n\tRIGHT = 39,\n\tDELETE = 46,\n\tCOMMA = 188;\n\nconst SEPERATOR = ',';\n\nconst COPY_PROPS = 'placeholder pattern spellcheck autocomplete autocapitalize autofocus accessKey accept lang minLength maxLength required'.split(' ');\n\nexport default function tagsInput(input) {\n\tfunction createElement(type, name, text, attributes) {\n\t\tlet el = document.createElement(type);\n\t\tif (name) el.className = name;\n\t\tif (text) el.textContent = text;\n\t\tfor (let key in attributes) {\n\t\t\tel.setAttribute(`data-${key}`, attributes[key]);\n\t\t}\n\t\treturn el;\n\t}\n\n\tfunction $(selector, all) {\n\t\treturn all===true ? Array.prototype.slice.call(base.querySelectorAll(selector)) : base.querySelector(selector);\n\t}\n\n\tfunction getValue() {\n\t\treturn $('.tag', true)\n\t\t\t.map( tag => tag.textContent )\n\t\t\t.concat(base.input.value || [])\n\t\t\t.join(SEPERATOR);\n\t}\n\n\tfunction setValue(value) {\n\t\t$('.tag', true).forEach( t => base.removeChild(t) );\n\t\tsavePartialInput(value);\n\t}\n\n\tfunction save() {\n\t\tinput.value = getValue();\n\t\tinput.dispatchEvent(new Event('change'));\n\t}\n\n\t// Return false if no need to add a tag\n\tfunction addTag(text) {\n\t\t// Add multiple tags if the user pastes in data with SEPERATOR already in it\n\t\tif (~text.indexOf(SEPERATOR)) text = text.split(SEPERATOR);\n\t\tif (Array.isArray(text)) return text.forEach(addTag);\n\n\t\tlet tag = text && text.trim();\n\t\t// Ignore if text is empty\n\t\tif (!tag) return false;\n\n\t\t// For duplicates, briefly highlight the existing tag\n\t\tif (!input.getAttribute('duplicates')) {\n\t\t\tlet exisingTag = $(`[data-tag=\"${tag}\"]`);\n\t\t\tif (exisingTag) {\n\t\t\t\texisingTag.classList.add('dupe');\n\t\t\t\tsetTimeout( () => exisingTag.classList.remove('dupe') , 100);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tbase.insertBefore(\n\t\t\tcreateElement('span', 'tag', tag, { tag }),\n\t\t\tbase.input\n\t\t);\n\t}\n\n\tfunction select(el) {\n\t\tlet sel = $('.selected');\n\t\tif (sel) sel.classList.remove('selected');\n\t\tif (el) el.classList.add('selected');\n\t}\n\n\tfunction setInputWidth() {\n\t\tlet last = $('.tag',true).pop(),\n\t\t\tw = base.offsetWidth;\n\t\tif (!w) return;\n\t\tbase.input.style.width = Math.max(\n\t\t\tw - (last ? (last.offsetLeft+last.offsetWidth) : 5) - 5,\n\t\t\tw/4\n\t\t) + 'px';\n\t}\n\n\tfunction savePartialInput(value) {\n\t\tif (typeof value!=='string' && !Array.isArray(value)) {\n\t\t\t// If the base input does not contain a value, default to the original element passed\n\t\t\tvalue = base.input.value;\n\t\t}\n\t\tif (addTag(value)!==false) {\n\t\t\tbase.input.value = '';\n\t\t\tsave();\n\t\t\tsetInputWidth();\n\t\t}\n\t}\n\n\tfunction refocus(e) {\n\t\tif (e.target.classList.contains('tag')) select(e.target);\n\t\tif (e.target===base.input) return select();\n\t\tbase.input.focus();\n\t\te.preventDefault();\n\t\treturn false;\n\t}\n\n\tlet base = createElement('div', 'tags-input'),\n\t\tsib = input.nextSibling;\n\tinput.parentNode[sib?'insertBefore':'appendChild'](base, sib);\n\n\tinput.style.cssText = 'position:absolute;left:0;top:-99px;width:1px;height:1px;opacity:0.01;';\n\tinput.tabIndex = -1;\n\n\tbase.input = createElement('input');\n\tbase.input.setAttribute('type', 'text');\n\tCOPY_PROPS.forEach( prop => {\n\t\tif (input[prop]!==base.input[prop]) {\n\t\t\tbase.input[prop] = input[prop];\n\t\t\ttry { delete input[prop]; }catch(e){}\n\t\t}\n\t});\n\tbase.appendChild(base.input);\n\n\tinput.addEventListener('focus', () => {\n\t\tbase.input.focus();\n\t});\n\n\tbase.input.addEventListener('focus', () => {\n\t\tbase.classList.add('focus');\n\t\tselect();\n\t});\n\n\tbase.input.addEventListener('blur', () => {\n\t\tbase.classList.remove('focus');\n\t\tselect();\n\t\tsavePartialInput();\n\t});\n\n\tbase.input.addEventListener('keydown', e => {\n\t\tlet el = base.input,\n\t\t\tkey = e.keyCode || e.which,\n\t\t\tselectedTag = $('.tag.selected'),\n\t\t\tpos = el.selectionStart===el.selectionEnd && el.selectionStart,\n\t\t\tlast = $('.tag',true).pop();\n\n\t\tsetInputWidth();\n\n\t\tif (key===ENTER || key===COMMA || key===TAB) {\n\t\t\tif (!el.value && key!==COMMA) return;\n\t\t\tsavePartialInput();\n\t\t}\n\t\telse if (key===DELETE && selectedTag) {\n\t\t\tif (selectedTag.nextSibling!==base.input) select(selectedTag.nextSibling);\n\t\t\tbase.removeChild(selectedTag);\n\t\t\tsetInputWidth();\n\t\t\tsave();\n\t\t}\n\t\telse if (key===BACKSPACE) {\n\t\t\tif (selectedTag) {\n\t\t\t\tselect(selectedTag.previousSibling);\n\t\t\t\tbase.removeChild(selectedTag);\n\t\t\t\tsetInputWidth();\n\t\t\t\tsave();\n\t\t\t}\n\t\t\telse if (last && pos===0) {\n\t\t\t\tselect(last);\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\telse if (key===LEFT) {\n\t\t\tif (selectedTag) {\n\t\t\t\tif (selectedTag.previousSibling) {\n\t\t\t\t\tselect(selectedTag.previousSibling);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (pos!==0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tselect(last);\n\t\t\t}\n\t\t}\n\t\telse if (key===RIGHT) {\n\t\t\tif (!selectedTag) return;\n\t\t\tselect(selectedTag.nextSibling);\n\t\t}\n\t\telse {\n\t\t\treturn select();\n\t\t}\n\n\t\te.preventDefault();\n\t\treturn false;\n\t});\n\n\t// Proxy \"input\" (live change) events , update the first tag live as the user types\n\t// This means that users who only want one thing don't have to enter commas\n\tbase.input.addEventListener('input', () => {\n\t\tinput.value = getValue();\n\t\tinput.dispatchEvent(new Event('input'));\n\t});\n\n\t// One tick after pasting, parse pasted text as CSV:\n\tbase.input.addEventListener('paste', () => setTimeout(savePartialInput, 0));\n\n\tbase.addEventListener('mousedown', refocus);\n\tbase.addEventListener('touchstart', refocus);\n\n\tbase.setValue = setValue;\n\tbase.getValue = getValue;\n\n\t// Add tags for existing values\n\tsavePartialInput(input.value);\n}\n\n// make life easier:\ntagsInput.enhance = tagsInput.tagsInput = tagsInput;\n"],"sourceRoot":"src"},"metadata":{},"sourceType":"script"}