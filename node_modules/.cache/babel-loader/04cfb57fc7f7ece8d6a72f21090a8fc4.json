{"ast":null,"code":"import React from'react';import{useSelector,useDispatch}from'react-redux';import Snackbar from'@material-ui/core/Snackbar';import MuiAlert from'@material-ui/lab/Alert';import{hideMessage}from'../../store';import{jsx as _jsx}from\"react/jsx-runtime\";export var SnackbarMessage=function SnackbarMessage(){var _useSelector=useSelector(function(state){return state.systemMessage;}),isOpen=_useSelector.isOpen,message=_useSelector.message,severity=_useSelector.severity;var dispatch=useDispatch();return/*#__PURE__*/_jsx(Snackbar,{anchorOrigin:{vertical:'top',horizontal:'center'},open:!!(isOpen&&message),autoHideDuration:5000,onClose:function onClose(){return dispatch(hideMessage());},children:/*#__PURE__*/_jsx(MuiAlert,{elevation:6,variant:\"filled\",onClose:function onClose(){return dispatch(hideMessage());},severity:severity,children:message})});};","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/components/SnackbarMessage/index.tsx"],"names":["React","useSelector","useDispatch","Snackbar","MuiAlert","hideMessage","SnackbarMessage","state","systemMessage","isOpen","message","severity","dispatch","vertical","horizontal"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,OAA4BC,WAA5B,KAA+C,aAA/C,C,2CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,kBACEL,WAAW,CAAC,SAACM,KAAD,QAA8BA,CAAAA,KAAK,CAACC,aAApC,EAAD,CADb,CAC5BC,MAD4B,cAC5BA,MAD4B,CACpBC,OADoB,cACpBA,OADoB,CACXC,QADW,cACXA,QADW,CAEpC,GAAMC,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,mBACC,KAAC,QAAD,EAAU,YAAY,CAAE,CAAEW,QAAQ,CAAE,KAAZ,CAAmBC,UAAU,CAAE,QAA/B,CAAxB,CAAmE,IAAI,CAAE,CAAC,EAAEL,MAAM,EAAIC,OAAZ,CAA1E,CAAgG,gBAAgB,CAAE,IAAlH,CAAwH,OAAO,CAAE,yBAAME,CAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAd,EAAjI,uBACC,KAAC,QAAD,EAAU,SAAS,CAAE,CAArB,CAAwB,OAAO,CAAC,QAAhC,CAAyC,OAAO,CAAE,yBAAMO,CAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAd,EAAlD,CAAiF,QAAQ,CAAEM,QAA3F,UACED,OADF,EADD,EADD,CAOA,CAVM","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { IApplicationState, hideMessage } from '../../store';\n\nexport const SnackbarMessage = () => {\n\tconst { isOpen, message, severity } = useSelector((state: IApplicationState) => state.systemMessage);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={!!(isOpen && message)} autoHideDuration={5000} onClose={() => dispatch(hideMessage())}>\n\t\t\t<MuiAlert elevation={6} variant='filled' onClose={() => dispatch(hideMessage())} severity={severity}>\n\t\t\t\t{message}\n\t\t\t</MuiAlert>\n\t\t</Snackbar>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}