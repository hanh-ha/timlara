{"ast":null,"code":"export const initialRequestState = {\n  isFetching: false,\n  data: null,\n  error: '',\n  total: 1\n};\nexport const GlobalReducer = (state, action, actionType) => {\n  switch (action.type) {\n    case `${actionType}_ATTEMPT`:\n      {\n        return { ...state,\n          isFetching: true,\n          error: '',\n          data: null\n        };\n      }\n\n    case `${actionType}_SUCCESS`:\n      {\n        return { ...state,\n          data: action.data,\n          isFetching: false,\n          error: '',\n          total: action.total ? action.total : state.total\n        };\n      }\n\n    case `${actionType}_FAIL`:\n      {\n        return { ...state,\n          error: action.error,\n          isFetching: false,\n          data: null\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n_c = GlobalReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalReducer\");","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/store/reducers/state.ts"],"names":["initialRequestState","isFetching","data","error","total","GlobalReducer","state","action","actionType","type"],"mappings":"AASA,OAAO,MAAMA,mBAAqC,GAAG;AACpDC,EAAAA,UAAU,EAAE,KADwC;AAEpDC,EAAAA,IAAI,EAAE,IAF8C;AAGpDC,EAAAA,KAAK,EAAE,EAH6C;AAIpDC,EAAAA,KAAK,EAAE;AAJ6C,CAA9C;AAyCP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAA0BC,MAA1B,EAA6CC,UAA7C,KAAsF;AAClH,UAAQD,MAAM,CAACE,IAAf;AACC,SAAM,GAAED,UAAW,UAAnB;AAA8B;AAC7B,eAAO,EACN,GAAGF,KADG;AAENL,UAAAA,UAAU,EAAE,IAFN;AAGNE,UAAAA,KAAK,EAAE,EAHD;AAIND,UAAAA,IAAI,EAAE;AAJA,SAAP;AAMA;;AACD,SAAM,GAAEM,UAAW,UAAnB;AAA8B;AAC7B,eAAO,EACN,GAAGF,KADG;AAENJ,UAAAA,IAAI,EAAEK,MAAM,CAACL,IAFP;AAGND,UAAAA,UAAU,EAAE,KAHN;AAINE,UAAAA,KAAK,EAAE,EAJD;AAKNC,UAAAA,KAAK,EAAEG,MAAM,CAACH,KAAP,GAAeG,MAAM,CAACH,KAAtB,GAA8BE,KAAK,CAACF;AALrC,SAAP;AAOA;;AACD,SAAM,GAAEI,UAAW,OAAnB;AAA2B;AAC1B,eAAO,EACN,GAAGF,KADG;AAENH,UAAAA,KAAK,EAAEI,MAAM,CAACJ,KAFR;AAGNF,UAAAA,UAAU,EAAE,KAHN;AAINC,UAAAA,IAAI,EAAE;AAJA,SAAP;AAMA;;AACD;AACC,aAAOI,KAAP;AA3BF;AA6BA,CA9BM;KAAMD,a","sourcesContent":["import { AnyAction } from 'redux';\n\nexport interface IAppRequestState {\n\tisFetching: boolean;\n\tdata: any;\n\terror: string;\n\ttotal?: number;\n}\n\nexport const initialRequestState: IAppRequestState = {\n\tisFetching: false,\n\tdata: null,\n\terror: '',\n\ttotal: 1,\n};\n\nexport interface SigninInput {\n\tusername: string;\n\tpassword: string;\n}\n\nexport interface InspirationInput {\n\tname: string;\n\tsentence: string;\n\tenable: boolean;\n\twoman: boolean;\n\tman: boolean;\n}\n\nexport type AlertSeverity = 'success' | 'info' | 'warning' | 'error' | undefined;\n\nexport interface IApplicationState {\n\tsignin: IAppRequestState;\n\tcurrentUser: IAppRequestState;\n\tpermission: { allPermissions: any };\n\tsearch: { text: string };\n\tadminAccounts: IAppRequestState;\n\tadminDetail: IAppRequestState;\n\tadminUpdate: IAppRequestState;\n\tadminCreate: IAppRequestState;\n\tadminRoles: IAppRequestState;\n\tadminRole: IAppRequestState;\n\tadminRoleUpdate: IAppRequestState;\n\tadminRoleCreate: IAppRequestState;\n\tsystemMessage: { message: string; isOpen: boolean; severity: AlertSeverity };\n\tgetUsers: IAppRequestState;\n\taddUser: IAppRequestState;\n\tAddUserReducer: IAppRequestState;\n}\n\nexport const GlobalReducer = (state: IAppRequestState, action: AnyAction, actionType: string): IAppRequestState => {\n\tswitch (action.type) {\n\t\tcase `${actionType}_ATTEMPT`: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: true,\n\t\t\t\terror: '',\n\t\t\t\tdata: null,\n\t\t\t};\n\t\t}\n\t\tcase `${actionType}_SUCCESS`: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: action.data,\n\t\t\t\tisFetching: false,\n\t\t\t\terror: '',\n\t\t\t\ttotal: action.total ? action.total : state.total,\n\t\t\t};\n\t\t}\n\t\tcase `${actionType}_FAIL`: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error,\n\t\t\t\tisFetching: false,\n\t\t\t\tdata: null,\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}