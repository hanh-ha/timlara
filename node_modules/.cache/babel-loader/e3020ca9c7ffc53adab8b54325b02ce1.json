{"ast":null,"code":"import { AllTypeActions } from '../types';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { Requests } from '../requests';\n// import { ENDPOINTS, getApiUrl } from '../endpoints';\nimport { showMessage } from '../actions';\n\nfunction* getFilterProduct() {\n  try {\n    const apiUrl = 'https://60517468534609001767198c.mockapi.io/api/filterProduct';\n    const data = yield Requests.get(apiUrl);\n    yield put({\n      type: AllTypeActions.LOAD_USERS_SUCCESS,\n      data\n    });\n  } catch (e) {\n    yield put({\n      type: AllTypeActions.LOAD_USERS_ERROR,\n      error: e.message\n    });\n  }\n}\n\nfunction* postfilterProduct({\n  type,\n  input\n}) {\n  yield put({\n    type: `${type}_ATTEMPT`\n  });\n\n  try {\n    // const apiUrl = getApiUrl(ENDPOINTS.CREATE_ADMIN_ACCOUNT);\n    const apiUrl = 'https://60517468534609001767198c.mockapi.io/api/filterProduct';\n    const data = yield Requests.post(apiUrl, input);\n    console.log('saga res', data);\n    yield put({\n      type: `${type}_SUCCESS`,\n      data: input\n    });\n    yield put(showMessage('Add user successful!'));\n  } catch (e) {\n    yield put({\n      type: `${type}_FAIL`,\n      error: e.toString()\n    });\n  }\n}\n\nexport function* storeActions() {\n  yield takeLatest(AllTypeActions.GET_FILTER_PRODUCT, getFilterProduct);\n  yield takeLatest(AllTypeActions.POST_FILTER_PRODUCT, postfilterProduct);\n}","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/store/sagas/store.ts"],"names":["AllTypeActions","put","takeLatest","Requests","showMessage","getFilterProduct","apiUrl","data","get","type","LOAD_USERS_SUCCESS","e","LOAD_USERS_ERROR","error","message","postfilterProduct","input","post","console","log","toString","storeActions","GET_FILTER_PRODUCT","POST_FILTER_PRODUCT"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,oBAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEA,UAAUC,gBAAV,GAA6B;AAC5B,MAAI;AACH,UAAMC,MAAM,GAAG,+DAAf;AACA,UAAMC,IAAS,GAAG,MAAMJ,QAAQ,CAACK,GAAT,CAAaF,MAAb,CAAxB;AACA,UAAML,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAET,cAAc,CAACU,kBAAvB;AAA2CH,MAAAA;AAA3C,KAAD,CAAT;AACA,GAJD,CAIE,OAAOI,CAAP,EAAU;AACX,UAAMV,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAET,cAAc,CAACY,gBAAvB;AAAyCC,MAAAA,KAAK,EAAEF,CAAC,CAACG;AAAlD,KAAD,CAAT;AACA;AACD;;AAED,UAAUC,iBAAV,CAA4B;AAAEN,EAAAA,IAAF;AAAQO,EAAAA;AAAR,CAA5B,EAAwD;AACvD,QAAMf,GAAG,CAAC;AAAEQ,IAAAA,IAAI,EAAG,GAAEA,IAAK;AAAhB,GAAD,CAAT;;AACA,MAAI;AACH;AACA,UAAMH,MAAM,GAAG,+DAAf;AACA,UAAMC,IAAS,GAAG,MAAMJ,QAAQ,CAACc,IAAT,CAAcX,MAAd,EAAsBU,KAAtB,CAAxB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,IAAxB;AACA,UAAMN,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAG,GAAEA,IAAK,UAAhB;AAA2BF,MAAAA,IAAI,EAAES;AAAjC,KAAD,CAAT;AACA,UAAMf,GAAG,CAACG,WAAW,CAAC,sBAAD,CAAZ,CAAT;AACA,GAPD,CAOE,OAAOO,CAAP,EAAU;AACX,UAAMV,GAAG,CAAC;AAAEQ,MAAAA,IAAI,EAAG,GAAEA,IAAK,OAAhB;AAAwBI,MAAAA,KAAK,EAAEF,CAAC,CAACS,QAAF;AAA/B,KAAD,CAAT;AACA;AACD;;AAED,OAAO,UAAUC,YAAV,GAAyB;AAC/B,QAAMnB,UAAU,CAACF,cAAc,CAACsB,kBAAhB,EAAoCjB,gBAApC,CAAhB;AACA,QAAMH,UAAU,CAACF,cAAc,CAACuB,mBAAhB,EAAqCR,iBAArC,CAAhB;AACA","sourcesContent":["import { AllTypeActions } from '../types';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { Requests } from '../requests';\nimport { AnyAction } from 'redux';\n// import { ENDPOINTS, getApiUrl } from '../endpoints';\nimport { showMessage } from '../actions';\n\nfunction* getFilterProduct() {\n\ttry {\n\t\tconst apiUrl = 'https://60517468534609001767198c.mockapi.io/api/filterProduct';\n\t\tconst data: any = yield Requests.get(apiUrl);\n\t\tyield put({ type: AllTypeActions.LOAD_USERS_SUCCESS, data });\n\t} catch (e) {\n\t\tyield put({ type: AllTypeActions.LOAD_USERS_ERROR, error: e.message });\n\t}\n}\n\nfunction* postfilterProduct({ type, input }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\t// const apiUrl = getApiUrl(ENDPOINTS.CREATE_ADMIN_ACCOUNT);\n\t\tconst apiUrl = 'https://60517468534609001767198c.mockapi.io/api/filterProduct';\n\t\tconst data: any = yield Requests.post(apiUrl, input);\n\t\tconsole.log('saga res', data);\n\t\tyield put({ type: `${type}_SUCCESS`, data: input });\n\t\tyield put(showMessage('Add user successful!'));\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nexport function* storeActions() {\n\tyield takeLatest(AllTypeActions.GET_FILTER_PRODUCT, getFilterProduct);\n\tyield takeLatest(AllTypeActions.POST_FILTER_PRODUCT, postfilterProduct);\n}\n"]},"metadata":{},"sourceType":"module"}