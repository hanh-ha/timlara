{"ast":null,"code":"import _regeneratorRuntime from\"/var/www/timlara-admin-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(getUsers),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(addUser),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(userActions);import{AllTypeActions}from'../types';import{put,takeLatest}from'redux-saga/effects';import{Requests}from'../requests';// import { ENDPOINTS, getApiUrl } from '../endpoints';\nimport{showMessage}from'../actions';function getUsers(){var apiUrl,data;return _regeneratorRuntime.wrap(function getUsers$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;// const apiUrl = getApiUrl(ENDPOINTS.GET_USERS);\napiUrl='https://60517468534609001767198c.mockapi.io/api/user';_context.next=4;return Requests.get(apiUrl);case 4:data=_context.sent;_context.next=7;return put({type:AllTypeActions.LOAD_USERS_SUCCESS,data:data});case 7:_context.next=13;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);_context.next=13;return put({type:AllTypeActions.LOAD_USERS_ERROR,error:_context.t0.message});case 13:case\"end\":return _context.stop();}}},_marked,null,[[0,9]]);}function addUser(_ref){var type,input,apiUrl,data;return _regeneratorRuntime.wrap(function addUser$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:type=_ref.type,input=_ref.input;_context2.next=3;return put({type:\"\".concat(type,\"_ATTEMPT\")});case 3:_context2.prev=3;// const apiUrl = getApiUrl(ENDPOINTS.CREATE_ADMIN_ACCOUNT);\napiUrl='https://60517468534609001767198c.mockapi.io/api/user';_context2.next=7;return Requests.post(apiUrl,input);case 7:data=_context2.sent;console.log('saga res',data);_context2.next=11;return put({type:\"\".concat(type,\"_SUCCESS\"),data:input});case 11:_context2.next=13;return put(showMessage('Add user successful!'));case 13:_context2.next=19;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](3);_context2.next=19;return put({type:\"\".concat(type,\"_FAIL\"),error:_context2.t0.toString()});case 19:case\"end\":return _context2.stop();}}},_marked2,null,[[3,15]]);}export function userActions(){return _regeneratorRuntime.wrap(function userActions$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeLatest(AllTypeActions.LOAD_USERS_LOADING,getUsers);case 2:_context3.next=4;return takeLatest(AllTypeActions.ADD_USER,addUser);case 4:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/store/sagas/user.ts"],"names":["getUsers","addUser","userActions","AllTypeActions","put","takeLatest","Requests","showMessage","apiUrl","get","data","type","LOAD_USERS_SUCCESS","LOAD_USERS_ERROR","error","message","input","post","console","log","toString","LOAD_USERS_LOADING","ADD_USER"],"mappings":"8LAOUA,Q,iDAWAC,O,iDAoBOC,W,EAtCjB,OAASC,cAAT,KAA+B,UAA/B,CACA,OAASC,GAAT,CAAcC,UAAd,KAAgC,oBAAhC,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA;AACA,OAASC,WAAT,KAA4B,YAA5B,CAEA,QAAUP,CAAAA,QAAV,oJAEE;AACMQ,MAHR,CAGiB,sDAHjB,iBAIoB,MAAMF,CAAAA,QAAQ,CAACG,GAAT,CAAaD,MAAb,CAAN,CAJpB,OAIQE,IAJR,+BAKE,MAAMN,CAAAA,GAAG,CAAC,CAAEO,IAAI,CAAER,cAAc,CAACS,kBAAvB,CAA2CF,IAAI,CAAJA,IAA3C,CAAD,CAAT,CALF,uGAOE,MAAMN,CAAAA,GAAG,CAAC,CAAEO,IAAI,CAAER,cAAc,CAACU,gBAAvB,CAAyCC,KAAK,CAAE,YAAEC,OAAlD,CAAD,CAAT,CAPF,oEAWA,QAAUd,CAAAA,OAAV,qJAAoBU,IAApB,MAAoBA,IAApB,CAA0BK,KAA1B,MAA0BA,KAA1B,kBACC,MAAMZ,CAAAA,GAAG,CAAC,CAAEO,IAAI,WAAKA,IAAL,YAAN,CAAD,CAAT,CADD,wBAGE;AACMH,MAJR,CAIiB,sDAJjB,kBAKoB,MAAMF,CAAAA,QAAQ,CAACW,IAAT,CAAcT,MAAd,CAAsBQ,KAAtB,CAAN,CALpB,OAKQN,IALR,gBAMEQ,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBT,IAAxB,EANF,kBAOE,MAAMN,CAAAA,GAAG,CAAC,CAAEO,IAAI,WAAKA,IAAL,YAAN,CAA2BD,IAAI,CAAEM,KAAjC,CAAD,CAAT,CAPF,0BAQE,MAAMZ,CAAAA,GAAG,CAACG,WAAW,CAAC,sBAAD,CAAZ,CAAT,CARF,+GAgBE,MAAMH,CAAAA,GAAG,CAAC,CAAEO,IAAI,WAAKA,IAAL,SAAN,CAAwBG,KAAK,CAAE,aAAEM,QAAF,EAA/B,CAAD,CAAT,CAhBF,uEAoBA,MAAO,SAAUlB,CAAAA,WAAV,2IACN,MAAMG,CAAAA,UAAU,CAACF,cAAc,CAACkB,kBAAhB,CAAoCrB,QAApC,CAAhB,CADM,wBAEN,MAAMK,CAAAA,UAAU,CAACF,cAAc,CAACmB,QAAhB,CAA0BrB,OAA1B,CAAhB,CAFM","sourcesContent":["import { AllTypeActions } from '../types';\nimport { put, takeLatest } from 'redux-saga/effects';\nimport { Requests } from '../requests';\nimport { AnyAction } from 'redux';\n// import { ENDPOINTS, getApiUrl } from '../endpoints';\nimport { showMessage } from '../actions';\n\nfunction* getUsers() {\n\ttry {\n\t\t// const apiUrl = getApiUrl(ENDPOINTS.GET_USERS);\n\t\tconst apiUrl = 'https://60517468534609001767198c.mockapi.io/api/user';\n\t\tconst data: any = yield Requests.get(apiUrl);\n\t\tyield put({ type: AllTypeActions.LOAD_USERS_SUCCESS, data });\n\t} catch (e) {\n\t\tyield put({ type: AllTypeActions.LOAD_USERS_ERROR, error: e.message });\n\t}\n}\n\nfunction* addUser({ type, input }: AnyAction) {\n\tyield put({ type: `${type}_ATTEMPT` });\n\ttry {\n\t\t// const apiUrl = getApiUrl(ENDPOINTS.CREATE_ADMIN_ACCOUNT);\n\t\tconst apiUrl = 'https://60517468534609001767198c.mockapi.io/api/user';\n\t\tconst data: any = yield Requests.post(apiUrl, input);\n\t\tconsole.log('saga res', data);\n\t\tyield put({ type: `${type}_SUCCESS`, data: input });\n\t\tyield put(showMessage('Add user successful!'));\n\t\t// if (data && data.success) {\n\t\t// \tyield put({ type: `${type}_SUCCESS`, data: data.account });\n\t\t// \tyield put(showMessage('Create addmin account successful!'));\n\t\t// } else {\n\t\t// \tyield put({ type: `${type}_FAIL`, error: data.message });\n\t\t// }\n\t} catch (e) {\n\t\tyield put({ type: `${type}_FAIL`, error: e.toString() });\n\t}\n}\n\nexport function* userActions() {\n\tyield takeLatest(AllTypeActions.LOAD_USERS_LOADING, getUsers);\n\tyield takeLatest(AllTypeActions.ADD_USER, addUser);\n}\n"]},"metadata":{},"sourceType":"module"}