{"ast":null,"code":"var _jsxFileName = \"/var/www/timlara-admin-reactjs/src/pages/overview/components/Dates/DayPickerRangeControllerWrapper.jsx\";\n\n/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport { forbidExtraProps } from 'airbnb-prop-types';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\nimport DayPickerRangeController from '../src/components/DayPickerRangeController';\nimport ScrollableOrientationShape from '../src/shapes/ScrollableOrientationShape';\nimport { START_DATE, END_DATE, HORIZONTAL_ORIENTATION } from '../src/constants';\nimport isInclusivelyAfterDay from '../src/utils/isInclusivelyAfterDay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = forbidExtraProps({\n  // example props for the demo\n  autoFocusEndDate: PropTypes.bool,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n  startDateOffset: PropTypes.func,\n  endDateOffset: PropTypes.func,\n  showInputs: PropTypes.bool,\n  minDate: momentPropTypes.momentObj,\n  maxDate: momentPropTypes.momentObj,\n  keepOpenOnDateSelect: PropTypes.bool,\n  minimumNights: PropTypes.number,\n  isOutsideRange: PropTypes.func,\n  isDayBlocked: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n  daysViolatingMinNightsCanBeClicked: PropTypes.bool,\n  // DayPicker props\n  enableOutsideDays: PropTypes.bool,\n  numberOfMonths: PropTypes.number,\n  orientation: ScrollableOrientationShape,\n  verticalHeight: PropTypes.number,\n  withPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.func,\n  renderCalendarInfo: PropTypes.func,\n  renderMonthElement: PropTypes.func,\n  renderMonthText: PropTypes.func,\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  renderNavPrevButton: PropTypes.func,\n  renderNavNextButton: PropTypes.func,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onOutsideClick: PropTypes.func,\n  renderCalendarDay: PropTypes.func,\n  renderDayContents: PropTypes.func,\n  renderKeyboardShortcutsButton: PropTypes.func,\n  renderKeyboardShortcutsPanel: PropTypes.func,\n  // i18n\n  monthFormat: PropTypes.string,\n  isRTL: PropTypes.bool\n});\nconst defaultProps = {\n  // example props for the demo\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n  startDateOffset: undefined,\n  endDateOffset: undefined,\n  showInputs: false,\n  minDate: null,\n  maxDate: null,\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  isDayBlocked: () => false,\n  isOutsideRange: day => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n  enableOutsideDays: false,\n  daysViolatingMinNightsCanBeClicked: false,\n  // calendar presentation and interaction related props\n  orientation: HORIZONTAL_ORIENTATION,\n  verticalHeight: undefined,\n  withPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n\n  onOutsideClick() {},\n\n  keepOpenOnDateSelect: false,\n  renderCalendarInfo: null,\n  isRTL: false,\n  renderMonthText: null,\n  renderMonthElement: null,\n  renderKeyboardShortcutsButton: undefined,\n  renderKeyboardShortcutsPanel: undefined,\n  // navigation related props\n  navPrev: null,\n  navNext: null,\n  renderNavPrevButton: null,\n  renderNavNextButton: null,\n\n  onPrevMonthClick() {},\n\n  onNextMonthClick() {},\n\n  // internationalization\n  monthFormat: 'MMMM YYYY'\n};\nexport const DayPickerRangeControllerWrapper = () => {\n  class DayPickerRangeControllerWrapper extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        errorMessage: null,\n        focusedInput: props.autoFocusEndDate ? END_DATE : START_DATE,\n        startDate: props.initialStartDate,\n        endDate: props.initialEndDate\n      };\n      this.onDatesChange = this.onDatesChange.bind(this);\n      this.onFocusChange = this.onFocusChange.bind(this);\n    }\n\n    onDatesChange({\n      startDate,\n      endDate\n    }) {\n      const {\n        daysViolatingMinNightsCanBeClicked,\n        minimumNights\n      } = this.props;\n      let doesNotMeetMinNights = false;\n\n      if (daysViolatingMinNightsCanBeClicked && startDate && endDate) {\n        const dayDiff = endDate.diff(startDate.clone().startOf('day').hour(12), 'days');\n        doesNotMeetMinNights = dayDiff < minimumNights && dayDiff >= 0;\n      }\n\n      this.setState({\n        startDate,\n        endDate: doesNotMeetMinNights ? null : endDate,\n        errorMessage: doesNotMeetMinNights ? 'That day does not meet the minimum nights requirement' : null\n      });\n    }\n\n    onFocusChange(focusedInput) {\n      this.setState({\n        // Force the focusedInput to always be truthy so that dates are always selectable\n        focusedInput: !focusedInput ? START_DATE : focusedInput\n      });\n    }\n\n    render() {\n      const {\n        renderCalendarInfo: renderCalendarInfoProp,\n        showInputs\n      } = this.props;\n      const {\n        errorMessage,\n        focusedInput,\n        startDate,\n        endDate\n      } = this.state;\n      const props = omit(this.props, ['autoFocus', 'autoFocusEndDate', 'initialStartDate', 'initialEndDate', 'showInputs']);\n      const startDateString = startDate && startDate.format('YYYY-MM-DD');\n      const endDateString = endDate && endDate.format('YYYY-MM-DD');\n      const renderCalendarInfo = errorMessage ? () => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 53\n      }, this) : renderCalendarInfoProp;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: '100%'\n        },\n        children: [showInputs && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 16\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"start date\",\n            value: startDateString,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"end date\",\n            value: endDateString,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DayPickerRangeController, { ...props,\n          onDatesChange: this.onDatesChange,\n          onFocusChange: this.onFocusChange,\n          focusedInput: focusedInput,\n          startDate: startDate,\n          endDate: endDate,\n          renderCalendarInfo: renderCalendarInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this);\n    }\n\n  }\n\n  DayPickerRangeControllerWrapper.propTypes = propTypes;\n  DayPickerRangeControllerWrapper.defaultProps = defaultProps;\n};\n_c = DayPickerRangeControllerWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayPickerRangeControllerWrapper\");","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/pages/overview/components/Dates/DayPickerRangeControllerWrapper.jsx"],"names":["React","PropTypes","momentPropTypes","forbidExtraProps","moment","omit","DayPickerRangeController","ScrollableOrientationShape","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","isInclusivelyAfterDay","propTypes","autoFocusEndDate","bool","initialStartDate","momentObj","initialEndDate","startDateOffset","func","endDateOffset","showInputs","minDate","maxDate","keepOpenOnDateSelect","minimumNights","number","isOutsideRange","isDayBlocked","isDayHighlighted","daysViolatingMinNightsCanBeClicked","enableOutsideDays","numberOfMonths","orientation","verticalHeight","withPortal","initialVisibleMonth","renderCalendarInfo","renderMonthElement","renderMonthText","navPrev","node","navNext","renderNavPrevButton","renderNavNextButton","onPrevMonthClick","onNextMonthClick","onOutsideClick","renderCalendarDay","renderDayContents","renderKeyboardShortcutsButton","renderKeyboardShortcutsPanel","monthFormat","string","isRTL","defaultProps","undefined","day","DayPickerRangeControllerWrapper","Component","constructor","props","state","errorMessage","focusedInput","startDate","endDate","onDatesChange","bind","onFocusChange","doesNotMeetMinNights","dayDiff","diff","clone","startOf","hour","setState","render","renderCalendarInfoProp","startDateString","format","endDateString","height","marginBottom"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport { forbidExtraProps } from 'airbnb-prop-types';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\n\nimport DayPickerRangeController from '../src/components/DayPickerRangeController';\n\nimport ScrollableOrientationShape from '../src/shapes/ScrollableOrientationShape';\n\nimport { START_DATE, END_DATE, HORIZONTAL_ORIENTATION } from '../src/constants';\nimport isInclusivelyAfterDay from '../src/utils/isInclusivelyAfterDay';\n\nconst propTypes = forbidExtraProps({\n  // example props for the demo\n  autoFocusEndDate: PropTypes.bool,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n  startDateOffset: PropTypes.func,\n  endDateOffset: PropTypes.func,\n  showInputs: PropTypes.bool,\n  minDate: momentPropTypes.momentObj,\n  maxDate: momentPropTypes.momentObj,\n\n  keepOpenOnDateSelect: PropTypes.bool,\n  minimumNights: PropTypes.number,\n  isOutsideRange: PropTypes.func,\n  isDayBlocked: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n  daysViolatingMinNightsCanBeClicked: PropTypes.bool,\n\n  // DayPicker props\n  enableOutsideDays: PropTypes.bool,\n  numberOfMonths: PropTypes.number,\n  orientation: ScrollableOrientationShape,\n  verticalHeight: PropTypes.number,\n  withPortal: PropTypes.bool,\n  initialVisibleMonth: PropTypes.func,\n  renderCalendarInfo: PropTypes.func,\n  renderMonthElement: PropTypes.func,\n  renderMonthText: PropTypes.func,\n\n  navPrev: PropTypes.node,\n  navNext: PropTypes.node,\n  renderNavPrevButton: PropTypes.func,\n  renderNavNextButton: PropTypes.func,\n\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onOutsideClick: PropTypes.func,\n  renderCalendarDay: PropTypes.func,\n  renderDayContents: PropTypes.func,\n  renderKeyboardShortcutsButton: PropTypes.func,\n  renderKeyboardShortcutsPanel: PropTypes.func,\n\n  // i18n\n  monthFormat: PropTypes.string,\n\n  isRTL: PropTypes.bool,\n});\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n  startDateOffset: undefined,\n  endDateOffset: undefined,\n  showInputs: false,\n  minDate: null,\n  maxDate: null,\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  isDayBlocked: () => false,\n  isOutsideRange: day => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n  enableOutsideDays: false,\n  daysViolatingMinNightsCanBeClicked: false,\n\n  // calendar presentation and interaction related props\n  orientation: HORIZONTAL_ORIENTATION,\n  verticalHeight: undefined,\n  withPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  onOutsideClick() {},\n  keepOpenOnDateSelect: false,\n  renderCalendarInfo: null,\n  isRTL: false,\n  renderMonthText: null,\n  renderMonthElement: null,\n  renderKeyboardShortcutsButton: undefined,\n  renderKeyboardShortcutsPanel: undefined,\n\n  // navigation related props\n  navPrev: null,\n  navNext: null,\n  renderNavPrevButton: null,\n  renderNavNextButton: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n\n  // internationalization\n  monthFormat: 'MMMM YYYY',\n};\n\nexport const DayPickerRangeControllerWrapper = () => {\nclass DayPickerRangeControllerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errorMessage: null,\n      focusedInput: props.autoFocusEndDate ? END_DATE : START_DATE,\n      startDate: props.initialStartDate,\n      endDate: props.initialEndDate,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  onDatesChange({ startDate, endDate }) {\n    const { daysViolatingMinNightsCanBeClicked, minimumNights } = this.props;\n    let doesNotMeetMinNights = false;\n    if (daysViolatingMinNightsCanBeClicked && startDate && endDate) {\n      const dayDiff = endDate.diff(startDate.clone().startOf('day').hour(12), 'days');\n      doesNotMeetMinNights = dayDiff < minimumNights && dayDiff >= 0;\n    }\n    this.setState({\n      startDate,\n      endDate: doesNotMeetMinNights ? null : endDate,\n      errorMessage: doesNotMeetMinNights\n        ? 'That day does not meet the minimum nights requirement'\n        : null,\n    });\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({\n      // Force the focusedInput to always be truthy so that dates are always selectable\n      focusedInput: !focusedInput ? START_DATE : focusedInput,\n    });\n  }\n\n  render() {\n    const { renderCalendarInfo: renderCalendarInfoProp, showInputs } = this.props;\n    const {\n      errorMessage,\n      focusedInput,\n      startDate,\n      endDate,\n    } = this.state;\n\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'showInputs',\n    ]);\n\n    const startDateString = startDate && startDate.format('YYYY-MM-DD');\n    const endDateString = endDate && endDate.format('YYYY-MM-DD');\n    const renderCalendarInfo = errorMessage ? () => <div>{errorMessage}</div> : renderCalendarInfoProp;\n\n    return (\n      <div style={{ height: '100%' }}>\n        {showInputs && (\n          <div style={{ marginBottom: 16 }}>\n            <input type=\"text\" name=\"start date\" value={startDateString} readOnly />\n            <input type=\"text\" name=\"end date\" value={endDateString} readOnly />\n          </div>\n        )}\n\n        <DayPickerRangeController\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={startDate}\n          endDate={endDate}\n          renderCalendarInfo={renderCalendarInfo}\n        />\n      </div>\n    );\n  }\n}\n\nDayPickerRangeControllerWrapper.propTypes = propTypes;\nDayPickerRangeControllerWrapper.defaultProps = defaultProps;\n}"]},"metadata":{},"sourceType":"module"}