{"ast":null,"code":"var _jsxFileName = \"/var/www/timlara-admin-reactjs/src/components/SnackbarMessage/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { hideMessage } from '../../store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SnackbarMessage = () => {\n  _s();\n\n  const {\n    isOpen,\n    message,\n    severity\n  } = useSelector(state => state.systemMessage);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    open: !!(isOpen && message),\n    autoHideDuration: 5000,\n    onClose: () => dispatch(hideMessage()),\n    children: /*#__PURE__*/_jsxDEV(MuiAlert, {\n      elevation: 6,\n      variant: \"filled\",\n      onClose: () => dispatch(hideMessage()),\n      severity: severity,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SnackbarMessage, \"bot0y2Rh31GwJ4UDkoTcjsPtTSM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SnackbarMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SnackbarMessage\");","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/components/SnackbarMessage/index.tsx"],"names":["React","useSelector","useDispatch","Snackbar","MuiAlert","hideMessage","SnackbarMessage","isOpen","message","severity","state","systemMessage","dispatch","vertical","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAA4BC,WAA5B,QAA+C,aAA/C;;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AACpC,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,MAAgCR,WAAW,CAAES,KAAD,IAA8BA,KAAK,CAACC,aAArC,CAAjD;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,sBACC,QAAC,QAAD;AAAU,IAAA,YAAY,EAAE;AAAEW,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAAxB;AAAmE,IAAA,IAAI,EAAE,CAAC,EAAEP,MAAM,IAAIC,OAAZ,CAA1E;AAAgG,IAAA,gBAAgB,EAAE,IAAlH;AAAwH,IAAA,OAAO,EAAE,MAAMI,QAAQ,CAACP,WAAW,EAAZ,CAA/I;AAAA,2BACC,QAAC,QAAD;AAAU,MAAA,SAAS,EAAE,CAArB;AAAwB,MAAA,OAAO,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAE,MAAMO,QAAQ,CAACP,WAAW,EAAZ,CAAhE;AAAiF,MAAA,QAAQ,EAAEI,QAA3F;AAAA,gBACED;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAVM;;GAAMF,e;UAC0BL,W,EACrBC,W;;;KAFLI,e","sourcesContent":["import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { IApplicationState, hideMessage } from '../../store';\n\nexport const SnackbarMessage = () => {\n\tconst { isOpen, message, severity } = useSelector((state: IApplicationState) => state.systemMessage);\n\tconst dispatch = useDispatch();\n\treturn (\n\t\t<Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'center' }} open={!!(isOpen && message)} autoHideDuration={5000} onClose={() => dispatch(hideMessage())}>\n\t\t\t<MuiAlert elevation={6} variant='filled' onClose={() => dispatch(hideMessage())} severity={severity}>\n\t\t\t\t{message}\n\t\t\t</MuiAlert>\n\t\t</Snackbar>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}