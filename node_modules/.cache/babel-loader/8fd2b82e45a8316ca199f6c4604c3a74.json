{"ast":null,"code":"import { initialRequestState, GlobalReducer } from './state';\nimport { AllTypeActions } from '../types'; // export const FilterProductReducer: Reducer = (state: IAppRequestState = initialRequestState, action: AnyAction) => {\n// \treturn GlobalReducer(state, action, AllTypeActions.FILTER_PRODUCT.toString());\n// };\n\nexport const FilterProductReducser = (state = {\n  data: [],\n  loading: false,\n  error: ''\n}, action) => {\n  switch (action.type) {\n    case AllTypeActions.GET_FILTER_PRODUCT:\n      {\n        return { ...state,\n          loading: true,\n          error: ''\n        };\n      }\n\n    case AllTypeActions.LOAD_USERS_SUCCESS:\n      {\n        return { ...state,\n          data: action.data,\n          loading: false\n        };\n      }\n\n    case AllTypeActions.LOAD_USERS_ERROR:\n      {\n        return { ...state,\n          loading: false,\n          error: action.error\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n_c = FilterProductReducser;\nexport const postFilterProductReducser = (state = initialRequestState, action) => {\n  return GlobalReducer(state, action, AllTypeActions.POST_FILTER_PRODUCT.toString());\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterProductReducser\");","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/store/reducers/store.ts"],"names":["initialRequestState","GlobalReducer","AllTypeActions","FilterProductReducser","state","data","loading","error","action","type","GET_FILTER_PRODUCT","LOAD_USERS_SUCCESS","LOAD_USERS_ERROR","postFilterProductReducser","POST_FILTER_PRODUCT","toString"],"mappings":"AACA,SAA2BA,mBAA3B,EAAgDC,aAAhD,QAAqE,SAArE;AACA,SAASC,cAAT,QAA+B,UAA/B,C,CAEA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAA8B,GAAG,CAACC,KAAqD,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,OAAO,EAAE,KAArB;AAA4BC,EAAAA,KAAK,EAAE;AAAnC,CAAzD,EAAkGC,MAAlG,KAAwH;AACrK,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKP,cAAc,CAACQ,kBAApB;AAAwC;AACvC,eAAO,EACN,GAAGN,KADG;AAENE,UAAAA,OAAO,EAAE,IAFH;AAGNC,UAAAA,KAAK,EAAE;AAHD,SAAP;AAKA;;AACD,SAAKL,cAAc,CAACS,kBAApB;AAAwC;AACvC,eAAO,EACN,GAAGP,KADG;AAENC,UAAAA,IAAI,EAAEG,MAAM,CAACH,IAFP;AAGNC,UAAAA,OAAO,EAAE;AAHH,SAAP;AAKA;;AACD,SAAKJ,cAAc,CAACU,gBAApB;AAAsC;AACrC,eAAO,EACN,GAAGR,KADG;AAENE,UAAAA,OAAO,EAAE,KAFH;AAGNC,UAAAA,KAAK,EAAEC,MAAM,CAACD;AAHR,SAAP;AAKA;;AACD;AAAS;AACR,eAAOH,KAAP;AACA;AAxBF;AA0BA,CA3BM;KAAMD,qB;AA4Bb,OAAO,MAAMU,yBAAkC,GAAG,CAACT,KAAuB,GAAGJ,mBAA3B,EAAgDQ,MAAhD,KAAsE;AACvH,SAAOP,aAAa,CAACG,KAAD,EAAQI,MAAR,EAAgBN,cAAc,CAACY,mBAAf,CAAmCC,QAAnC,EAAhB,CAApB;AACA,CAFM","sourcesContent":["import { AnyAction, Reducer } from 'redux';\nimport { IAppRequestState, initialRequestState, GlobalReducer } from './state';\nimport { AllTypeActions } from '../types';\n\n// export const FilterProductReducer: Reducer = (state: IAppRequestState = initialRequestState, action: AnyAction) => {\n// \treturn GlobalReducer(state, action, AllTypeActions.FILTER_PRODUCT.toString());\n// };\nexport interface IApplicationModal {}\nexport const FilterProductReducser: Reducer = (state: { data: any; loading: boolean; error: string } = { data: [], loading: false, error: '' }, action: AnyAction) => {\n\tswitch (action.type) {\n\t\tcase AllTypeActions.GET_FILTER_PRODUCT: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t\terror: '',\n\t\t\t};\n\t\t}\n\t\tcase AllTypeActions.LOAD_USERS_SUCCESS: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: action.data,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t}\n\t\tcase AllTypeActions.LOAD_USERS_ERROR: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\nexport const postFilterProductReducser: Reducer = (state: IAppRequestState = initialRequestState, action: AnyAction) => {\n\treturn GlobalReducer(state, action, AllTypeActions.POST_FILTER_PRODUCT.toString());\n};\n"]},"metadata":{},"sourceType":"module"}