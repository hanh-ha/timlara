{"ast":null,"code":"import axios from 'axios';\nimport { objectToFormData } from '../../helpers';\n\nconst defaultHeader = token => {\n  const header = {\n    'Content-Type': 'application/json',\n    'Cache-Control': 'no-cache'\n  };\n  if (token) header.Authorization = `Bearer ${token}`;\n  return header;\n};\n\nconst defaultUser = token => {\n  const user = {\n    'Content-Type': 'application/json',\n    'Cache-Control': 'no-cache'\n  };\n  if (token) user.Authorization = `Bearer ${token}`;\n  return user;\n};\n\nclass ApiRequests {\n  get(apiUrl, params = {}, isAuth = true) {\n    // const headers = defaultHeader(isAuth ? localStorage.getItem('backoffice_token') : null);\n    const users = defaultUser(isAuth ? localStorage.getItem('backoffice_token') : null);\n    return new Promise((resolve, reject) => {\n      // axios\n      // \t.get(apiUrl, { headers, params })\n      // \t.then((response) => {\n      // \t\tconst jsonData = response.data;\n      // \t\tresolve(jsonData);\n      // \t})\n      // \t.catch((e) => {\n      // \t\treject(e);\n      // \t});\n      axios.get(apiUrl, {\n        users,\n        params\n      }).then(response => {\n        const jsonData = response.data;\n        resolve(jsonData);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  }\n\n  post(apiUrl, input = {}, isAuth = true, jsonParser = false) {\n    const data = jsonParser ? JSON.stringify(input) : objectToFormData(input); // const headers = defaultHeader(isAuth ? localStorage.getItem('backoffice_token') : null);\n\n    const users = defaultUser(isAuth ? localStorage.getItem('backoffice_token') : null);\n    return new Promise((resolve, reject) => {\n      // axios\n      // \t.post(apiUrl, data, { headers })\n      // \t.then((response) => {\n      // \t\tconst jsonData = response.data;\n      // \t\tresolve(jsonData);\n      // \t})\n      // \t.catch((e) => {\n      // \t\treject(e);\n      // \t});\n      axios.post(apiUrl, data, {\n        users\n      }).then(response => {\n        const jsonData = response.data;\n        resolve(jsonData);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  }\n\n  put(apiUrl, input = {}, isAuth = true) {\n    const data = objectToFormData(input); // const headers = defaultHeader(isAuth ? localStorage.getItem('backoffice_token') : null);\n\n    const users = defaultUser(isAuth ? localStorage.getItem('backoffice_token') : null);\n    return new Promise((resolve, reject) => {\n      // axios\n      // \t.put(apiUrl, data, { headers })\n      // \t.then((response) => {\n      // \t\tconst jsonData = response.data;\n      // \t\tresolve(jsonData);\n      // \t})\n      // \t.catch((e) => {\n      // \t\treject(e);\n      // \t});\n      axios.put(apiUrl, data, {\n        users\n      }).then(response => {\n        const jsonData = response.data;\n        resolve(jsonData);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  }\n\n  delete(apiUrl, params = {}, isAuth = true) {\n    // const headers = defaultHeader(isAuth ? localStorage.getItem('backoffice_token') : null);\n    const users = defaultUser(isAuth ? localStorage.getItem('backoffice_token') : null);\n    return new Promise((resolve, reject) => {\n      // axios\n      // \t.delete(apiUrl, { headers, params })\n      // \t.then((response) => {\n      // \t\tconst jsonData = response.data;\n      // \t\tresolve(jsonData);\n      // \t})\n      // \t.catch((e) => {\n      // \t\treject(e);\n      // \t});\n      axios.delete(apiUrl, {\n        users,\n        params\n      }).then(response => {\n        const jsonData = response.data;\n        resolve(jsonData);\n      }).catch(e => {\n        reject(e);\n      });\n    });\n  }\n\n}\n\nexport const Requests = new ApiRequests();","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/store/requests/index.ts"],"names":["axios","objectToFormData","defaultHeader","token","header","Authorization","defaultUser","user","ApiRequests","get","apiUrl","params","isAuth","users","localStorage","getItem","Promise","resolve","reject","then","response","jsonData","data","catch","e","post","input","jsonParser","JSON","stringify","put","delete","Requests"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { objectToFormData } from '../../helpers';\n\nconst defaultHeader = (token?: string | null) => {\n\tconst header: any = {\n\t\t'Content-Type': 'application/json',\n\t\t'Cache-Control': 'no-cache',\n\t};\n\tif (token) header.Authorization = `Bearer ${token}`;\n\treturn header;\n};\n\nconst defaultUser = (token?: string | null) => {\n\tconst user: any = {\n\t\t'Content-Type': 'application/json',\n\t\t'Cache-Control': 'no-cache',\n\t};\n\tif (token) user.Authorization = `Bearer ${token}`;\n\treturn user;\n};\n\nclass ApiRequests {\n\tpublic get(apiUrl: string, params: any = {}, isAuth: boolean = true): Promise<any> {\n\t\t// const headers = defaultHeader(isAuth ? localStorage.getItem('backoffice_token') : null);\n\t\tconst users = defaultUser(isAuth ? localStorage.getItem('backoffice_token') : null);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\t// axios\n\t\t\t// \t.get(apiUrl, { headers, params })\n\t\t\t// \t.then((response) => {\n\t\t\t// \t\tconst jsonData = response.data;\n\t\t\t// \t\tresolve(jsonData);\n\t\t\t// \t})\n\t\t\t// \t.catch((e) => {\n\t\t\t// \t\treject(e);\n\t\t\t// \t});\n\n\t\t\taxios\n\t\t\t\t.get(apiUrl, { users, params })\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconst jsonData = response.data;\n\t\t\t\t\tresolve(jsonData);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\treject(e);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic post(apiUrl: string, input: any = {}, isAuth: boolean = true, jsonParser: boolean = false): Promise<any> {\n\t\tconst data = jsonParser ? JSON.stringify(input) : objectToFormData(input);\n\t\t// const headers = defaultHeader(isAuth ? localStorage.getItem('backoffice_token') : null);\n\t\tconst users = defaultUser(isAuth ? localStorage.getItem('backoffice_token') : null);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\t// axios\n\t\t\t// \t.post(apiUrl, data, { headers })\n\t\t\t// \t.then((response) => {\n\t\t\t// \t\tconst jsonData = response.data;\n\t\t\t// \t\tresolve(jsonData);\n\t\t\t// \t})\n\t\t\t// \t.catch((e) => {\n\t\t\t// \t\treject(e);\n\t\t\t// \t});\n\n\t\t\taxios\n\t\t\t\t.post(apiUrl, data, { users })\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconst jsonData = response.data;\n\t\t\t\t\tresolve(jsonData);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\treject(e);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic put(apiUrl: string, input: any = {}, isAuth: boolean = true): Promise<any> {\n\t\tconst data = objectToFormData(input);\n\t\t// const headers = defaultHeader(isAuth ? localStorage.getItem('backoffice_token') : null);\n\t\tconst users = defaultUser(isAuth ? localStorage.getItem('backoffice_token') : null);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\t// axios\n\t\t\t// \t.put(apiUrl, data, { headers })\n\t\t\t// \t.then((response) => {\n\t\t\t// \t\tconst jsonData = response.data;\n\t\t\t// \t\tresolve(jsonData);\n\t\t\t// \t})\n\t\t\t// \t.catch((e) => {\n\t\t\t// \t\treject(e);\n\t\t\t// \t});\n\n\t\t\taxios\n\t\t\t\t.put(apiUrl, data, { users })\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconst jsonData = response.data;\n\t\t\t\t\tresolve(jsonData);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\treject(e);\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic delete(apiUrl: string, params: any = {}, isAuth: boolean = true): Promise<any> {\n\t\t// const headers = defaultHeader(isAuth ? localStorage.getItem('backoffice_token') : null);\n\t\tconst users = defaultUser(isAuth ? localStorage.getItem('backoffice_token') : null);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\t// axios\n\t\t\t// \t.delete(apiUrl, { headers, params })\n\t\t\t// \t.then((response) => {\n\t\t\t// \t\tconst jsonData = response.data;\n\t\t\t// \t\tresolve(jsonData);\n\t\t\t// \t})\n\t\t\t// \t.catch((e) => {\n\t\t\t// \t\treject(e);\n\t\t\t// \t});\n\n\t\t\taxios\n\t\t\t\t.delete(apiUrl, { users, params })\n\t\t\t\t.then((response) => {\n\t\t\t\t\tconst jsonData = response.data;\n\t\t\t\t\tresolve(jsonData);\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\treject(e);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\nexport const Requests = new ApiRequests();\n"]},"metadata":{},"sourceType":"module"}