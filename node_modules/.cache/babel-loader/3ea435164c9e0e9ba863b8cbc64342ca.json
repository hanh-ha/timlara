{"ast":null,"code":"import _toConsumableArray from\"/var/www/timlara-admin-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/var/www/timlara-admin-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{AllTypeActions}from'../types';import{GlobalReducer,initialRequestState}from'./state';export var GetUsersReducser=function GetUsersReducser(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{data:[],loading:false,error:''};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case AllTypeActions.LOAD_USERS_LOADING:{return _objectSpread(_objectSpread({},state),{},{loading:true,error:''});}case AllTypeActions.LOAD_USERS_SUCCESS:{return _objectSpread(_objectSpread({},state),{},{data:action.data,loading:false});}case AllTypeActions.LOAD_USERS_ERROR:{return _objectSpread(_objectSpread({},state),{},{loading:false,error:action.error});}case'ADD_USER_SUCCESS':{console.log('add user success reducer',action);return _objectSpread(_objectSpread({},state),{},{data:[].concat(_toConsumableArray(state.data),[action.data])});}case'CHECK_USER_SUCCESS':{return _objectSpread(_objectSpread({},state),{},{data:[].concat(_toConsumableArray(state.data),[action.data])});}default:{return state;}}};export var AddUserReducer=function AddUserReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialRequestState;var action=arguments.length>1?arguments[1]:undefined;return GlobalReducer(state,action,AllTypeActions.ADD_USER.toString());};","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/store/reducers/user.ts"],"names":["AllTypeActions","GlobalReducer","initialRequestState","GetUsersReducser","state","data","loading","error","action","type","LOAD_USERS_LOADING","LOAD_USERS_SUCCESS","LOAD_USERS_ERROR","console","log","AddUserReducer","ADD_USER","toString"],"mappings":"iTAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA,OAASC,aAAT,CAA0CC,mBAA1C,KAAqE,SAArE,CAIA,MAAO,IAAMC,CAAAA,gBAAyB,CAAG,QAA5BA,CAAAA,gBAA4B,EAAwH,IAAvHC,CAAAA,KAAuH,2DAA/D,CAAEC,IAAI,CAAE,EAAR,CAAYC,OAAO,CAAE,KAArB,CAA4BC,KAAK,CAAE,EAAnC,CAA+D,IAAtBC,CAAAA,MAAsB,2CAChK,OAAQA,MAAM,CAACC,IAAf,EACC,IAAKT,CAAAA,cAAc,CAACU,kBAApB,CAAwC,CACvC,sCACIN,KADJ,MAECE,OAAO,CAAE,IAFV,CAGCC,KAAK,CAAE,EAHR,GAKA,CACD,IAAKP,CAAAA,cAAc,CAACW,kBAApB,CAAwC,CACvC,sCACIP,KADJ,MAECC,IAAI,CAAEG,MAAM,CAACH,IAFd,CAGCC,OAAO,CAAE,KAHV,GAKA,CACD,IAAKN,CAAAA,cAAc,CAACY,gBAApB,CAAsC,CACrC,sCACIR,KADJ,MAECE,OAAO,CAAE,KAFV,CAGCC,KAAK,CAAEC,MAAM,CAACD,KAHf,GAKA,CACD,IAAK,kBAAL,CAAyB,CACxBM,OAAO,CAACC,GAAR,CAAY,0BAAZ,CAAwCN,MAAxC,EACA,sCAAYJ,KAAZ,MAAmBC,IAAI,8BAAMD,KAAK,CAACC,IAAZ,GAAkBG,MAAM,CAACH,IAAzB,EAAvB,GACA,CAED,IAAK,oBAAL,CAA2B,CAC1B,sCAAYD,KAAZ,MAAmBC,IAAI,8BAAMD,KAAK,CAACC,IAAZ,GAAkBG,MAAM,CAACH,IAAzB,EAAvB,GACA,CAED,QAAS,CACR,MAAOD,CAAAA,KAAP,CACA,CAjCF,CAmCA,CApCM,CAsCP,MAAO,IAAMW,CAAAA,cAAuB,CAAG,QAA1BA,CAAAA,cAA0B,EAAsE,IAArEX,CAAAA,KAAqE,2DAA3CF,mBAA2C,IAAtBM,CAAAA,MAAsB,2CAC5G,MAAOP,CAAAA,aAAa,CAACG,KAAD,CAAQI,MAAR,CAAgBR,cAAc,CAACgB,QAAf,CAAwBC,QAAxB,EAAhB,CAApB,CACA,CAFM","sourcesContent":["import { AllTypeActions } from '../types';\nimport { AnyAction, Reducer } from 'redux';\nimport { GlobalReducer, IAppRequestState, initialRequestState } from './state';\n\nexport interface IApplicationModal {}\n\nexport const GetUsersReducser: Reducer = (state: { data: any; loading: boolean; error: string } = { data: [], loading: false, error: '' }, action: AnyAction) => {\n\tswitch (action.type) {\n\t\tcase AllTypeActions.LOAD_USERS_LOADING: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: true,\n\t\t\t\terror: '',\n\t\t\t};\n\t\t}\n\t\tcase AllTypeActions.LOAD_USERS_SUCCESS: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdata: action.data,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\t}\n\t\tcase AllTypeActions.LOAD_USERS_ERROR: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tloading: false,\n\t\t\t\terror: action.error,\n\t\t\t};\n\t\t}\n\t\tcase 'ADD_USER_SUCCESS': {\n\t\t\tconsole.log('add user success reducer', action);\n\t\t\treturn { ...state, data: [...state.data, action.data] };\n\t\t}\n\n\t\tcase 'CHECK_USER_SUCCESS': {\n\t\t\treturn { ...state, data: [...state.data, action.data] };\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nexport const AddUserReducer: Reducer = (state: IAppRequestState = initialRequestState, action: AnyAction) => {\n\treturn GlobalReducer(state, action, AllTypeActions.ADD_USER.toString());\n};\n"]},"metadata":{},"sourceType":"module"}