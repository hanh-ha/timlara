{"ast":null,"code":"var _jsxFileName = \"/var/www/timlara-admin-reactjs/src/pages/overview/components/Dates/DateRangePickerWrapper.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit'; // import DateRangePicker from '../src/components/DateRangePicker';\n\nimport { DateRangePickerPhrases } from '../src/defaultPhrases';\nimport DateRangePickerShape from '../src/shapes/DateRangePickerShape';\nimport { START_DATE, END_DATE, HORIZONTAL_ORIENTATION, ANCHOR_LEFT, NAV_POSITION_TOP, OPEN_DOWN } from '../src/constants';\nimport isInclusivelyAfterDay from '../src/utils/isInclusivelyAfterDay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n  ...omit(DateRangePickerShape, ['startDate', 'endDate', 'onDatesChange', 'focusedInput', 'onFocusChange'])\n};\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n  openDirection: OPEN_DOWN,\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n\n  onPrevMonthClick() {},\n\n  onNextMonthClick() {},\n\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: day => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n  stateDateWrapper: date => date\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n    let focusedInput = null;\n\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n      startDate: props.initialStartDate,\n      endDate: props.initialEndDate\n    };\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  onDatesChange({\n    startDate,\n    endDate\n  }) {\n    const {\n      stateDateWrapper\n    } = this.props;\n    this.setState({\n      startDate: startDate && stateDateWrapper(startDate),\n      endDate: endDate && stateDateWrapper(endDate)\n    });\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({\n      focusedInput\n    });\n  }\n\n  render() {\n    const {\n      focusedInput,\n      startDate,\n      endDate\n    } = this.state; // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n\n    const props = omit(this.props, ['autoFocus', 'autoFocusEndDate', 'initialStartDate', 'initialEndDate', 'stateDateWrapper']);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(DateRangePicker, { ...props,\n        onDatesChange: this.onDatesChange,\n        onFocusChange: this.onFocusChange,\n        focusedInput: focusedInput,\n        startDate: startDate,\n        endDate: endDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\nexport default DateRangePickerWrapper;","map":{"version":3,"sources":["/var/www/timlara-admin-reactjs/src/pages/overview/components/Dates/DateRangePickerWrapper.jsx"],"names":["React","PropTypes","momentPropTypes","moment","omit","DateRangePickerPhrases","DateRangePickerShape","START_DATE","END_DATE","HORIZONTAL_ORIENTATION","ANCHOR_LEFT","NAV_POSITION_TOP","OPEN_DOWN","isInclusivelyAfterDay","propTypes","autoFocus","bool","autoFocusEndDate","stateDateWrapper","func","initialStartDate","momentObj","initialEndDate","defaultProps","startDateId","startDatePlaceholderText","endDateId","endDatePlaceholderText","disabled","required","screenReaderInputMessage","showClearDates","showDefaultInputIcon","customInputIcon","customArrowIcon","customCloseIcon","block","small","regular","renderMonthText","orientation","anchorDirection","horizontalMargin","withPortal","withFullScreenPortal","initialVisibleMonth","numberOfMonths","keepOpenOnDateSelect","reopenPickerOnClearDates","isRTL","openDirection","navPosition","navPrev","navNext","onPrevMonthClick","onNextMonthClick","onClose","renderCalendarDay","undefined","renderDayContents","minimumNights","enableOutsideDays","isDayBlocked","isOutsideRange","day","isDayHighlighted","displayFormat","localeData","longDateFormat","monthFormat","phrases","date","DateRangePickerWrapper","Component","constructor","props","focusedInput","state","startDate","endDate","onDatesChange","bind","onFocusChange","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport momentPropTypes from 'react-moment-proptypes';\nimport moment from 'moment';\nimport omit from 'lodash/omit';\n\n// import DateRangePicker from '../src/components/DateRangePicker';\n\nimport { DateRangePickerPhrases } from '../src/defaultPhrases';\nimport DateRangePickerShape from '../src/shapes/DateRangePickerShape';\nimport {\n  START_DATE,\n  END_DATE,\n  HORIZONTAL_ORIENTATION,\n  ANCHOR_LEFT,\n  NAV_POSITION_TOP,\n  OPEN_DOWN,\n} from '../src/constants';\nimport isInclusivelyAfterDay from '../src/utils/isInclusivelyAfterDay';\n\nconst propTypes = {\n  // example props for the demo\n  autoFocus: PropTypes.bool,\n  autoFocusEndDate: PropTypes.bool,\n  stateDateWrapper: PropTypes.func,\n  initialStartDate: momentPropTypes.momentObj,\n  initialEndDate: momentPropTypes.momentObj,\n\n  ...omit(DateRangePickerShape, [\n    'startDate',\n    'endDate',\n    'onDatesChange',\n    'focusedInput',\n    'onFocusChange',\n  ]),\n};\n\nconst defaultProps = {\n  // example props for the demo\n  autoFocus: false,\n  autoFocusEndDate: false,\n  initialStartDate: null,\n  initialEndDate: null,\n\n  // input related props\n  startDateId: START_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDateId: END_DATE,\n  endDatePlaceholderText: 'End Date',\n  disabled: false,\n  required: false,\n  screenReaderInputMessage: '',\n  showClearDates: false,\n  showDefaultInputIcon: false,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  block: false,\n  small: false,\n  regular: false,\n\n  // calendar presentation and interaction related props\n  renderMonthText: null,\n  orientation: HORIZONTAL_ORIENTATION,\n  anchorDirection: ANCHOR_LEFT,\n  horizontalMargin: 0,\n  withPortal: false,\n  withFullScreenPortal: false,\n  initialVisibleMonth: null,\n  numberOfMonths: 2,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDates: false,\n  isRTL: false,\n  openDirection: OPEN_DOWN,\n\n  // navigation related props\n  navPosition: NAV_POSITION_TOP,\n  navPrev: null,\n  navNext: null,\n  onPrevMonthClick() {},\n  onNextMonthClick() {},\n  onClose() {},\n\n  // day presentation and interaction related props\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  minimumNights: 1,\n  enableOutsideDays: false,\n  isDayBlocked: () => false,\n  isOutsideRange: day => !isInclusivelyAfterDay(day, moment()),\n  isDayHighlighted: () => false,\n\n  // internationalization\n  displayFormat: () => moment.localeData().longDateFormat('L'),\n  monthFormat: 'MMMM YYYY',\n  phrases: DateRangePickerPhrases,\n\n  stateDateWrapper: date => date,\n};\n\nclass DateRangePickerWrapper extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let focusedInput = null;\n    if (props.autoFocus) {\n      focusedInput = START_DATE;\n    } else if (props.autoFocusEndDate) {\n      focusedInput = END_DATE;\n    }\n\n    this.state = {\n      focusedInput,\n      startDate: props.initialStartDate,\n      endDate: props.initialEndDate,\n    };\n\n    this.onDatesChange = this.onDatesChange.bind(this);\n    this.onFocusChange = this.onFocusChange.bind(this);\n  }\n\n  onDatesChange({ startDate, endDate }) {\n    const { stateDateWrapper } = this.props;\n    this.setState({\n      startDate: startDate && stateDateWrapper(startDate),\n      endDate: endDate && stateDateWrapper(endDate),\n    });\n  }\n\n  onFocusChange(focusedInput) {\n    this.setState({ focusedInput });\n  }\n\n  render() {\n    const { focusedInput, startDate, endDate } = this.state;\n\n    // autoFocus, autoFocusEndDate, initialStartDate and initialEndDate are helper props for the\n    // example wrapper but are not props on the SingleDatePicker itself and\n    // thus, have to be omitted.\n    const props = omit(this.props, [\n      'autoFocus',\n      'autoFocusEndDate',\n      'initialStartDate',\n      'initialEndDate',\n      'stateDateWrapper',\n    ]);\n\n    return (\n      <div>\n        <DateRangePicker\n          {...props}\n          onDatesChange={this.onDatesChange}\n          onFocusChange={this.onFocusChange}\n          focusedInput={focusedInput}\n          startDate={startDate}\n          endDate={endDate}\n        />\n      </div>\n    );\n  }\n}\n\nDateRangePickerWrapper.propTypes = propTypes;\nDateRangePickerWrapper.defaultProps = defaultProps;\n\nexport default DateRangePickerWrapper;"]},"metadata":{},"sourceType":"module"}